{"version":3,"sources":["pages/sharedStyle.js","pages/Works__/CustomHooks.jsx","components/Button.jsx","components/ContributionChart.jsx","components/Footer.jsx","components/Header.jsx","components/IntroHolder.jsx","components/ItemCell.jsx","pages/Welcome.jsx","pages/Works.jsx","pages/Works__/Coc2016.jsx","pages/Works__/Yng.jsx","pages/Works__/Viaf2021.jsx","pages/Works__/Gutsy.jsx","pages/Works__/Heartfit.jsx","pages/Works__/Doh.jsx","pages/Works__/Cardivu.jsx","pages/WorksList.jsx","shared/App.jsx","client/Root.jsx","index.js"],"names":["colors","primary","secondary","background","GlobalStyle","createGlobalStyle","HeadContainer","styled","div","props","textColor","HeadContainerImg","process","imageUrl","HeadContainerVid","video","Background","MainContainer","paddingToTop","ColumnTitle","first","HolderTitle","span","HolderDesc","TextHolder","Holder__div","column","row","Holder__image","img","objPos","Holder__video","Holder__iframe","ImageHolder","height","TechContainer","TechHolder","BackBtn","SvgDiv","bott","SvgContainer","SvgImg","object","top","left","right","TextBlock","ContentsContainer","useScroll","useState","scrollY","setScrollYPos","useEffect","mounted","window","addEventListener","console","log","Button","button","LinkButton","href","link","target","btnText","Chart","svg","percent","ChartDesc","ContributionChart","isSolo","setSolo","withTeam","length","className","style","margin","position","viewBox","d","jobName","myJob","map","item","idx","HeaderLink","Link","HeaderHolder","Header","active","setActive","isScrolled","setScrollActive","onScroll","to","id","version","xmlns","x","y","width","cx","cy","r","points","nav","Intro__Item","IntroItemHolder","IntroHolder","title","client","period","subtitle","team","results","ItemCells","ThumbImg","ItemCell","isConstruction","path","alt","src","thumbImg","TextBox","Border","Container","ScrollDownNotice","Contents","TitleImg","AbMainContainer","WorksButton","Welcome","isScroll","setIsScroll","violationRef","useRef","AOS","init","once","scrollTo","motion","initial","opacity","animate","exit","transition","duration","xlink","space","onAnimationEnd","current","scrollIntoView","behavior","block","ref","marginBottom","Works","match","exact","component","WorksList","history","useParams","contentsId","params","data","imagesUrls","imagesObjectUrls","videoUrls","JSON_DATA","images","push","original","videos","link_banner","type","muted","controls","jobs","job_name","my_job","with_team","percentage","autoPlay","loop","coc2016","onClick","goBack","yng","br","ref01","ref02","to01","to02","offsetTop","gridColumn","zIndex","viaf","gutsy","heartfit","rel","frameBorder","allow","allowFullScreen","doh","cardivu","includes","thumb_img","createBrowserHistory","App","location","useLocation","AnimatePresence","exitBeforeEnter","render","pathname","Root","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.812bc741.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n// Shared style\r\n\r\nexport const colors = {\r\n  primary: \"#101010\",\r\n  secondary: \"#ffffff\",\r\n  background: \"#f9f9f9\",\r\n};\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  \r\n  html {\r\n    background-color: ${colors.background};\r\n    scroll-behavior: smooth;\r\n    /* padding-right: 14px; */\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n    font-family: 'Noto Sans KR', sans-serif;\r\n    font-size: 16px;\r\n    letter-spacing: -0.05rem;\r\n    word-break: keep-all;\r\n\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    \r\n    ::-webkit-scrollbar {\r\n      width: 14px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      border: 4px solid rgba(0, 0, 0, 0);\r\n      background-clip: padding-box;\r\n      border-radius: 9999px;\r\n      background-color: #AAAAAA;\r\n    }\r\n\r\n    \r\n    \r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n  }\r\n\r\n  a:visited {\r\n    color: black;\r\n    text-underline-position: unset;\r\n  }\r\n\r\n  a:hover {\r\n    color: rgb(80, 80, 80);\r\n  }\r\n`;\r\n\r\nexport const HeadContainer = styled.div`\r\n  position: fixed;\r\n  z-index: -4;\r\n  width: 100%;\r\n  height: 100vh;\r\n  padding-top: 4rem;\r\n  /* overflow: hidden; */\r\n  color: ${(props) => props.textColor || \"white\"};\r\n  text-shadow: 0 0 4px\r\n    ${(props) => (props.textColor === \"black\" ? \"white\" : \"black\")};\r\n\r\n  & > .titleText {\r\n    position: absolute;\r\n    top: 45%;\r\n    left: 50%;\r\n    text-align: center;\r\n    letter-spacing: 0.4rem;\r\n\r\n    transform: translate(-50%);\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n\r\n    @media screen and (max-width: 1080px) {\r\n      width: 100vh - 1.5rem;\r\n      left: 1rem;\r\n      top: 30%;\r\n      transform: translate(0);\r\n\r\n      font-weight: 500;\r\n      text-align: left;\r\n      font-size: 2.5rem;\r\n      letter-spacing: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HeadContainerImg = styled.div`\r\n  height: 100%;\r\n  background: no-repeat center/cover;\r\n  background-image: url(${(props) => process.env.PUBLIC_URL + props.imageUrl});\r\n`;\r\n\r\nexport const HeadContainerVid = styled.video`\r\n  width: auto;\r\n  height: auto;\r\n  min-height: 100%;\r\n\r\n  margin: auto;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n\r\n  -webkit-transform: translateX(-50%) translateY(-50%);\r\n  -moz-transform: translateX(-50%) translateY(-50%);\r\n  -ms-transform: translateX(-50%) translateY(-50%);\r\n  -o-transform: translateX(-50%) translateY(-50%);\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  position: relative;\r\n  top: 100vh;\r\n  background-color: #f9f9f9;\r\n  height: auto;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 5rem;\r\n  padding-top: ${(props) => props.paddingToTop || 0};\r\n\r\n  /* &.scrolled {\r\n    background-color: white;\r\n  } */\r\n\r\n  & > .subContainer {\r\n    max-width: 45rem;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 10rem;\r\n    margin-bottom: 4rem;\r\n\r\n    @media screen and (max-width: 1080px) {\r\n      padding-left: 3%;\r\n      padding-right: 3%;\r\n    }\r\n  }\r\n\r\n  & > .itemList {\r\n    max-width: 80rem;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nexport const ColumnTitle = styled.div`\r\n  position: relative;\r\n  left: -1%;\r\n  font-size: 1.5rem;\r\n  display: inline-block;\r\n  width: auto;\r\n  padding: 0 1em 0 0.4em;\r\n  height: 2em;\r\n  line-height: 1.8em;\r\n  margin-bottom: 1em;\r\n  margin-top: ${(props) => (props.first ? \"0em\" : \"4em\")};\r\n  background-color: black;\r\n  color: white;\r\n`;\r\n\r\nexport const HolderTitle = styled.span`\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const HolderDesc = styled.span`\r\n  white-space: pre-line;\r\n  margin-left: 0px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const TextHolder = styled.div`\r\n  width: auto;\r\n  display: grid;\r\n  font-size: 1.1rem;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 2rem 1rem;\r\n  margin-top: ${(props) => (props.first ? \"0rem\" : \"10rem\")};\r\n\r\n  & > .title {\r\n    position: relative;\r\n    justify-content: left;\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    grid-column: span 3;\r\n\r\n    & > .bar_start {\r\n      position: absolute;\r\n      background-color: black;\r\n      width: 2.5rem;\r\n      height: 5px;\r\n      display: block;\r\n      top: -20px;\r\n\r\n      @media screen and (max-width: 1080px) {\r\n        top: -15px;\r\n        width: 2rem;\r\n        height: 3px;\r\n      }\r\n    }\r\n  }\r\n\r\n  & > .desc {\r\n    grid-column: span 3;\r\n    line-height: 2rem;\r\n  }\r\n\r\n  & > .items {\r\n    max-width: 100%;\r\n    border: black solid 1px;\r\n    grid-column: span 3;\r\n  }\r\n\r\n  & > .buttonHolder {\r\n    grid-column: span 3;\r\n  }\r\n`;\r\n\r\nexport const Holder__div = styled.div`\r\n  position: relative;\r\n  grid-column: ${(props) => props.column || \"6 span\"};\r\n  grid-row: ${(props) => props.row || null};\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-column: 12 span;\r\n  }\r\n`;\r\n\r\nexport const Holder__image = styled.img`\r\n  object-position: ${(props) => props.objPos || null};\r\n  grid-column: ${(props) => props.column || \"6 span\"};\r\n  grid-row: ${(props) => props.row || null};\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-column: 12 span;\r\n  }\r\n`;\r\n\r\nexport const Holder__video = styled.video`\r\n  object-position: ${(props) => props.objPos || null};\r\n  grid-column: ${(props) => props.column || \"1 / 7\"};\r\n  grid-row: ${(props) => props.row || null};\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-column: 12 span;\r\n  }\r\n`;\r\n\r\nexport const Holder__iframe = styled.div`\r\n  grid-column: ${(props) => props.column || \"3 / 8\"};\r\n  grid-row: ${(props) => props.row || null};\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-column: 12 span;\r\n  }\r\n`;\r\n\r\nexport const ImageHolder = styled.div`\r\n  width: 100%;\r\n\r\n  box-sizing: content-box;\r\n  height: ${(props) => (props.height ? props.height : \"auto\")};\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  gap: 0.18rem;\r\n  margin-bottom: 14rem;\r\n  /* \r\n  @media screen and (max-width: 1080px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  } */\r\n\r\n  ${Holder__div} {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  ${Holder__image} {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  ${Holder__video} {\r\n    /* pointer-events: none; */\r\n\r\n    width: 80%;\r\n    object-fit: cover;\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nexport const TechContainer = styled.div`\r\n  z-index: 2;\r\n  background-color: #d7d7d740;\r\n  backdrop-filter: blur(3px);\r\n  padding: 5rem 15% 7rem 15%;\r\n  margin-top: 18rem;\r\n  margin-bottom: 18rem;\r\n\r\n  & > .techHolder__title {\r\n    font-size: 1.6em;\r\n    font-weight: 600;\r\n    margin-bottom: 1rem;\r\n    text-align: center;\r\n  }\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    padding: 5rem 0 7rem 0;\r\n  }\r\n`;\r\n\r\nexport const TechHolder = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  margin-top: 2rem;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  row-gap: 1rem;\r\n\r\n  & > .techHolder__chart {\r\n    grid-row-start: 2;\r\n  }\r\n`;\r\n\r\n// export const TechContainer = styled.div`\r\n//   width: 20%;\r\n//   height: 10em;\r\n//   background-color: #f5f5f5;\r\n//   border-radius: 15px;\r\n//\r\n//   .tech-tmb {\r\n//     position: relative;\r\n//     top: 10%;\r\n//     left: 50%;\r\n//     transform: translate(-50%);\r\n//     width: 5em;\r\n//     height: 5em;\r\n//     background-color: #757575;\r\n//     border-radius: 5%;\r\n//   }\r\n//   .tech-title {\r\n//     position: relative;\r\n//     text-align: center;\r\n//     top: 13%;\r\n//   }\r\n// `;\r\n\r\nexport const BackBtn = styled.div`\r\n  width: auto;\r\n  height: 10rem;\r\n  cursor: pointer;\r\n  background-color: lightgray;\r\n  margin: 8rem;\r\n  vertical-align: middle;\r\n  text-align: center;\r\n  color: black;\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n`;\r\n\r\n// img tag for svg\r\n\r\nexport const SvgDiv = styled.div`\r\n  pointer-events: visible;\r\n  width: 30%;\r\n  position: absolute;\r\n  bottom: ${(props) => props.bott || \"20%\"};\r\n  right: -10%;\r\n  filter: opacity(0.2);\r\n`;\r\n\r\nexport const SvgContainer = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  /* pointer-events: none; */\r\n  z-index: 100;\r\n\r\n  ${SvgDiv} {\r\n  }\r\n`;\r\n\r\nexport const SvgImg = styled.object`\r\n  position: absolute;\r\n\r\n  top: ${(props) => props.top || \"14%\"};\r\n  left: ${(props) => props.left || null};\r\n  right: ${(props) => props.right || null};\r\n  width: 35%;\r\n  filter: opacity(0.2);\r\n`;\r\n\r\nexport const TextBlock = styled.div``;\r\n\r\nexport const ContentsContainer = styled.div`\r\n  height: auto;\r\n  padding-top: 10em;\r\n  padding-left: 17%;\r\n  padding-right: 17%;\r\n  background-color: gray;\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    padding-left: 10%;\r\n    padding-right: 10%;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useScroll() {\r\n  const [scrollY, setScrollYPos] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (mounted) {\r\n        setScrollYPos(window.scrollY);\r\n\r\n        // 아래 타이밍에 값이 업데이트 되지 않음\r\n        // console.log(scrollY);\r\n      }\r\n    });\r\n    return () => {\r\n      console.log(\"event ended\");\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    scrollY,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  width: auto;\r\n  margin: auto;\r\n  padding: 1rem 2rem;\r\n  color: white;\r\n  background-color: #4cc790;\r\n  border: 2px black solid;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    background-color: #79dfb1;\r\n  }\r\n  &:active {\r\n    background-color: #3f9b72;\r\n  }\r\n`;\r\n\r\nexport default function LinkButton(props) {\r\n  return (\r\n    <a href={props.link} target=\"_blank\">\r\n      <Button>{props.btnText || \"사이트로 가기\"}</Button>\r\n    </a>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// export const TechContainer = styled.div`\r\n//   z-index: 2;\r\n//   background-color: #b7b7b740;\r\n//   backdrop-filter: blur(5px);\r\n//   padding: 5rem 15% 7rem 15%;\r\n\r\n//   @media screen and (max-width: 1080px) {\r\n//     padding: 5rem 1% 7rem 1%;\r\n//   }\r\n// `;\r\n\r\n// export const TechHolder = styled.div`\r\n//   width: auto;\r\n//   margin: auto;\r\n//   display: grid;\r\n//   grid-template-columns: repeat(2, auto);\r\n//   grid-template-rows: repeat(3, auto);\r\n\r\n//   grid-auto-flow: row dense;\r\n//   row-gap: 5rem;\r\n\r\n//   @media screen and (max-width: 1080px) {\r\n//   }\r\n//   & > .techHolder__title {\r\n//     font-size: 1.6em;\r\n//     font-weight: 600;\r\n//     margin-bottom: 1rem;\r\n//     text-align: center;\r\n\r\n//     grid-column-start: 1;\r\n//     grid-column-end: 3;\r\n//     grid-row-start: 1;\r\n//     grid-row-end: 2;\r\n//   }\r\n\r\n//   /* & > .techHolder__desc {\r\n//     position: absolute;\r\n//     text-align: center;\r\n//     left: 50%;\r\n//     top: 50%;\r\n//   } */\r\n\r\n//   & > .techHolder__chart {\r\n//     grid-row-start: 2;\r\n//     grid-row-end: 3;\r\n//   }\r\n// `;\r\n\r\nconst Chart = styled.svg`\r\n  height: 45vh;\r\n  width: auto;\r\n  justify-content: center;\r\n\r\n  &.techHolder__chart {\r\n    fill: none;\r\n    stroke: #4cc790;\r\n    stroke-linecap: round;\r\n    stroke-width: 1.8;\r\n    stroke-dasharray: ${(props) => props.percent || 0} 100;\r\n    stroke-dashoffset: -200;\r\n  }\r\n\r\n  & > .techHolder__chartbase {\r\n    fill: none;\r\n    stroke: #ddd;\r\n    stroke-width: 1.8;\r\n    stroke-dasharray: 0;\r\n  }\r\n  @media screen and (max-width: 700px) {\r\n    height: 30vh;\r\n  }\r\n`;\r\n\r\nconst ChartDesc = styled.div`\r\n  min-width: 100%;\r\n  position: absolute;\r\n  text-align: center;\r\n  left: 50%;\r\n  top: 45%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  & > .job_name {\r\n    font-size: 1.4rem;\r\n    line-height: 300%;\r\n  }\r\n`;\r\n\r\nexport default function ContributionChart(props) {\r\n  const [isSolo, setSolo] = useState(true);\r\n  useEffect(() => {\r\n    if (props.withTeam.length === 0) {\r\n      setSolo(true);\r\n    } else {\r\n      setSolo(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"ChartContainer\"\r\n      style={{ margin: \"auto\", position: \"relative\" }}\r\n    >\r\n      <Chart\r\n        className=\"techHolder__chart\"\r\n        percent={props.percent}\r\n        viewBox=\"0 0 36 36\"\r\n      >\r\n        <path\r\n          className=\"techHolder__chartbase\"\r\n          d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n        />\r\n        <path\r\n          d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n        />\r\n      </Chart>\r\n      <ChartDesc className=\"techHolder__desc\">\r\n        <strong className=\"job_name\">{props.jobName}</strong>\r\n        <br />\r\n\r\n        <strong>MY JOB</strong>\r\n        <br />\r\n        {props.myJob.map((item, idx) => {\r\n          return (\r\n            <span key={\"myjob\" + idx}>\r\n              {item}\r\n              <br />\r\n            </span>\r\n          );\r\n        })}\r\n        <br />\r\n        {isSolo || (\r\n          <div>\r\n            <strong>WITH TEAM</strong>\r\n            <br />\r\n            {props.withTeam.map((item, idx) => {\r\n              return (\r\n                <span key={\"w/team\" + idx}>\r\n                  {item}\r\n                  <br />\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </ChartDesc>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FooterContainer = styled.div`\r\n  background-color: #f9f9f9;\r\n  padding-bottom: 5rem;\r\n\r\n  & > .textContainer {\r\n    max-width: 45rem;\r\n    grid-template-columns: 1fr;\r\n    width: auto;\r\n    margin: auto;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterContainer>\r\n      <div className=\"textContainer\">tlvud12@gmail.com</div>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderLink = styled(Link)``;\r\n\r\nconst HeaderHolder = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  padding: 3vh 5%;\r\n  font-size: 2rem;\r\n\r\n  left: 0;\r\n  top: 0;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  box-sizing: border-box;\r\n\r\n  background-color: black;\r\n  color: white;\r\n  backdrop-filter: blur(5px);\r\n  transition: 0.2s;\r\n  z-index: 5;\r\n\r\n  ${HeaderLink} {\r\n    & > .headerTitle {\r\n      display: inline-block;\r\n      padding-left: 5%;\r\n      height: 100%;\r\n\r\n      & > .st0 {\r\n        stroke: white;\r\n        stroke-width: 3px;\r\n        fill: none;\r\n      }\r\n    }\r\n\r\n    & > .headerText {\r\n      padding-right: 5%;\r\n      display: inline-block;\r\n      color: white;\r\n\r\n      @media screen and (max-width: 1080px) {\r\n        max-width: 80%;\r\n        padding-left: 5%;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.isScrolled {\r\n    font-size: 1.7rem;\r\n    padding: 1.5vh 5%;\r\n    font-weight: 700;\r\n    background-color: #000000b0;\r\n\r\n    & > ${HeaderLink} {\r\n      & > .headerTitle {\r\n        & > .st0 {\r\n          fill: white;\r\n          stroke: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Header(props) {\r\n  const [active, setActive] = useState(true);\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n\r\n  const onScroll = () => {\r\n    if (window.scrollY > 50) {\r\n      setScrollActive(true);\r\n    } else {\r\n      setScrollActive(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setActive(true);\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return function cleanup() {\r\n      setActive(false);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {active ? (\r\n        <HeaderHolder className={isScrolled ? \"isScrolled\" : \"\"}>\r\n          <HeaderLink to=\"\" id=\"Home\">\r\n            <svg\r\n              className=\"headerTitle\"\r\n              version=\"1.1\"\r\n              id=\"Layer_1\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              x=\"0px\"\r\n              y=\"0px\"\r\n              viewBox=\"0 20 125 80\"\r\n            >\r\n              <rect x=\"5.5\" y=\"33.17\" className=\"st0\" width=\"15\" height=\"60\" />\r\n              <rect\r\n                x=\"105.5\"\r\n                y=\"33.17\"\r\n                className=\"st0\"\r\n                width=\"15\"\r\n                height=\"60\"\r\n              />\r\n              <circle className=\"st0\" cx=\"42.06\" cy=\"52.23\" r=\"19.06\" />\r\n              <polygon\r\n                className=\"st0\"\r\n                points=\"78.4,34.07 65.45,34.07 65.44,34.08 65.44,47.05 89.68,71.29 102.64,71.29 102.65,71.28 102.65,58.32 \r\n\t\"\r\n              />\r\n            </svg>\r\n          </HeaderLink>\r\n          <HeaderLink\r\n            to=\"/works\"\r\n            id=\"works\"\r\n            // className={isScrolled ? \"isScrolled\" : \"\"}\r\n          >\r\n            <div className=\"headerText\">{props.nav}</div>\r\n          </HeaderLink>\r\n        </HeaderHolder>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Intro__Item = styled.div`\r\n  font-size: 1.3rem;\r\n  grid-column: span 1;\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-column: span 3;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst IntroItemHolder = styled.div`\r\n  width: auto;\r\n  max-width: 45rem;\r\n  padding-top: 15rem;\r\n  padding-bottom: 15rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  /* grid-template-rows: repeat(2, auto); */\r\n  column-gap: 2rem;\r\n  row-gap: 3rem;\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    padding-top: 9rem;\r\n    padding-bottom: 3rem;\r\n\r\n    margin-left: 3%;\r\n    margin-right: 3%;\r\n  }\r\n  & > .bg {\r\n    width: 80vw;\r\n    height: 53vh;\r\n    box-sizing: content-box;\r\n    position: absolute;\r\n    left: -1%;\r\n    top: 11.5rem;\r\n    border: #262626 solid 2.5px;\r\n    z-index: 5;\r\n\r\n    @media screen and (max-width: 1200px) {\r\n      width: 0%;\r\n      visibility: collapse;\r\n    }\r\n\r\n    @media screen and (max-height: 800px) {\r\n      height: 70vh;\r\n    }\r\n\r\n    @media screen and (max-height: 600px) {\r\n      width: 0%;\r\n      visibility: collapse;\r\n    }\r\n  }\r\n\r\n  & > .title {\r\n    grid-column: span 3;\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    margin-bottom: 1rem;\r\n    @media screen and (max-width: 1080px) {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n\r\n  ${Intro__Item} {\r\n    & > .head {\r\n      font-weight: 600;\r\n    }\r\n    & > .bar {\r\n      margin: 0.7rem auto;\r\n      width: auto;\r\n      height: 4px;\r\n      background-color: #333;\r\n\r\n      @media screen and (max-width: 1080px) {\r\n        height: 1px;\r\n        background-color: #5555;\r\n      }\r\n    }\r\n    & > .desc {\r\n      color: #666666;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function IntroHolder(props) {\r\n  return (\r\n    <IntroItemHolder>\r\n      <div className=\"bg\" />\r\n      <div className=\"title\">{props.title}</div>\r\n      <Intro__Item>\r\n        <div className=\"head\">주관</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.client}</div>\r\n      </Intro__Item>\r\n      <Intro__Item>\r\n        <div className=\"head\">작업 기간</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.period}</div>\r\n      </Intro__Item>\r\n      <Intro__Item>\r\n        <div className=\"head\">작업 분류</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.subtitle}</div>\r\n      </Intro__Item>\r\n      <Intro__Item>\r\n        <div className=\"head\">인원 구성</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.team}</div>\r\n      </Intro__Item>\r\n      <Intro__Item>\r\n        <div className=\"head\">결과물</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.results}</div>\r\n      </Intro__Item>\r\n    </IntroItemHolder>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ItemCells = styled(Link)`\r\n  position: relative;\r\n  float: left;\r\n  width: 50%;\r\n  display: block;\r\n  margin-bottom: 8vh;\r\n  padding-left: 1.5%;\r\n  padding-right: 1.5%;\r\n  box-sizing: border-box;\r\n  filter: grayscale(100%);\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  transition: 0.5s;\r\n\r\n  &.underConstruction {\r\n    pointer-events: none;\r\n  }\r\n\r\n  & > strong {\r\n    font-size: 2.3rem;\r\n    font-weight: 700;\r\n  }\r\n\r\n  & > em {\r\n    font-size: 1.3rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &:hover {\r\n    filter: grayscale(0%);\r\n  }\r\n\r\n  & > .panel {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    background-color: black;\r\n  }\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    filter: none;\r\n\r\n    width: 100%;\r\n    padding-left: 3%;\r\n    padding-right: 3%;\r\n\r\n    & > strong {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ThumbImg = styled.img`\r\n  border: 2px solid black;\r\n  width: 100%;\r\n`;\r\n\r\nexport default function ItemCell(props) {\r\n  return (\r\n    <ItemCells\r\n      className={props.isConstruction ? \"underConstruction\" : \"\"}\r\n      to={`${props.path}/${props.alt}`}\r\n    >\r\n      <ThumbImg alt={props.alt} src={props.thumbImg} />\r\n      <strong>{props.title}</strong> <br />\r\n      <em>{props.subtitle}</em>\r\n    </ItemCells>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { GlobalStyle, MainContainer } from \"./sharedStyle\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useScroll } from \"./Works__/CustomHooks\";\r\n\r\nimport { Footer } from \"../components\";\r\n\r\n//Animation API\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\n//#region 간판 스타일\r\n\r\nconst TextBox = styled.div`\r\n  margin-bottom: 6rem;\r\n  padding-right: 14px;\r\n  word-break: keep-all;\r\n  & > .box__title {\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    margin-bottom: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Border = styled.div`\r\n  position: fixed;\r\n  width: auto;\r\n  height: 96vh;\r\n  left: 2em;\r\n  right: 2em;\r\n  top: 2em;\r\n  display: content-box;\r\n  background-color: white;\r\n  z-index: -2;\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    left: 1em;\r\n    right: 1em;\r\n    top: 1em;\r\n    bottom: 1em;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -75%);\r\n`;\r\n\r\nconst ScrollDownNotice = styled.div`\r\n  position: fixed;\r\n  width: 50px;\r\n  height: 100px;\r\n  left: 50%;\r\n  bottom: 5%;\r\n  transform: translate(-50%, 0);\r\n  z-index: 3;\r\n\r\n  transition: 0.2s;\r\n  animation-duration: 1s;\r\n  animation-name: \"popLoop\";\r\n  animation-iteration-count: infinite;\r\n  animation-direction: alternate;\r\n\r\n  & > .arrow {\r\n    fill: #3d3d3d;\r\n    stroke: #3d3d3d;\r\n    stroke-width: 8;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n  }\r\n\r\n  &.scrolled {\r\n    opacity: 0;\r\n  }\r\n\r\n  @keyframes popLoop {\r\n    from {\r\n      bottom: 5%;\r\n    }\r\n    to {\r\n      bottom: 8%;\r\n    }\r\n  }\r\n`;\r\n\r\n// const LinkContainer = styled.div`\r\n//   display: flex;\r\n//   flex-wrap: wrap;\r\n//   justify-content: center;\r\n// `;\r\n\r\nconst Contents = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst TitleImg = styled.svg`\r\n  width: 25rem;\r\n  fill: #fff;\r\n\r\n  .st0 {\r\n    animation-name: lineAnim;\r\n    animation-duration: 5s;\r\n    animation-timing-function: ease-in-out;\r\n    animation-fill-mode: forwards;\r\n\r\n    stroke-width: 2px;\r\n    stroke: black;\r\n    stroke-dasharray: 0 300;\r\n  }\r\n\r\n  .circle,\r\n  .poly,\r\n  .rect {\r\n    animation-name: fills;\r\n    animation-duration: 5s;\r\n    animation-timing-function: ease-in-out;\r\n    animation-fill-mode: forwards;\r\n  }\r\n\r\n  @keyframes lineAnim {\r\n    to {\r\n      stroke-width: 0px;\r\n      stroke-dasharray: 160 0;\r\n    }\r\n  }\r\n\r\n  @keyframes fills {\r\n    to {\r\n      fill: #303030;\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    width: 70vw;\r\n  }\r\n`;\r\n\r\n//#endregion\r\n\r\n//#region About 스타일\r\nconst AbMainContainer = styled(MainContainer)`\r\n  /* position: absolute; */\r\n  /* top: 100%; */\r\n  background-color: #f9f9f9;\r\n  margin-top: 100vh;\r\n  height: auto;\r\n  overflow-y: hidden;\r\n  font-size: 1.2rem;\r\n  box-sizing: content-box;\r\n  @media screen and (max-width: 1080px) {\r\n    padding: 0 2%;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  & > .main__introImage {\r\n    margin-top: 18vh;\r\n    margin-bottom: 12vh;\r\n    height: auto;\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 1fr);\r\n    grid-template-rows: 50vh;\r\n    grid-auto-rows: max-content;\r\n\r\n    @media screen and (max-width: 800px) {\r\n      margin-top: 4vh;\r\n      grid-template-columns: 1fr;\r\n    }\r\n\r\n    & > .introContainer {\r\n      &.first {\r\n        grid-column: 2 / span 3;\r\n      }\r\n      &.second {\r\n        grid-column: span 3;\r\n      }\r\n      height: fit-content;\r\n      margin: auto;\r\n      width: 80%;\r\n\r\n      & > .circle,\r\n      .polygon {\r\n        margin: auto;\r\n        width: 65%;\r\n\r\n        @media screen and (max-width: 1080px) {\r\n          width: 55%;\r\n        }\r\n      }\r\n\r\n      & > .circle {\r\n        fill: #ff9f31;\r\n      }\r\n\r\n      & > .polygon {\r\n        fill: #6a99ff;\r\n      }\r\n\r\n      & > .text {\r\n        text-align: center;\r\n        font-size: 2.3rem;\r\n        font-weight: 500;\r\n\r\n        @media screen and (max-width: 1080px) {\r\n          font-size: 1.5rem;\r\n          font-weight: normal;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  & > .text_container {\r\n    max-width: 45rem;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    width: auto;\r\n    margin: auto;\r\n    margin-top: 5rem;\r\n\r\n    & > .horizontal-divider {\r\n      margin: auto;\r\n      margin-top: 100px;\r\n      margin-bottom: 100px;\r\n      width: 100%;\r\n      height: 1px;\r\n      background-color: gray;\r\n    }\r\n\r\n    & > .btn {\r\n      justify-self: center;\r\n    }\r\n  }\r\n\r\n  & > .about_intro {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst TestButton = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  background-color: skyblue;\r\n  position: fixed;\r\n  top: 400px;\r\n  left: 100px;\r\n`;\r\n\r\nconst WorksButton = styled.button`\r\n  display: inline-block;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  width: auto;\r\n  margin: auto;\r\n  padding: 1rem 2rem;\r\n  color: white;\r\n  background-color: #4cc790;\r\n  border: 2px black solid;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #79dfb1;\r\n  }\r\n  &:active {\r\n    background-color: #3f9b72;\r\n  }\r\n`;\r\n//#endregion\r\n\r\n//#region function\r\nexport default function Welcome() {\r\n  const [isScroll, setIsScroll] = useState(false);\r\n  const violationRef = useRef();\r\n  const { scrollY } = useScroll();\r\n\r\n  useEffect(() => {\r\n    AOS.init({ once: true });\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (scrollY > 1000) {\r\n      setIsScroll(true);\r\n    } else {\r\n      setIsScroll(false);\r\n    }\r\n  }, [scrollY]);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <GlobalStyle />\r\n\r\n        <ScrollDownNotice className={isScroll ? \"scrolled\" : \"scroll_down\"}>\r\n          <svg\r\n            className=\"arrow\"\r\n            version=\"1.1\"\r\n            id=\"Layer_1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xlink=\"http://www.w3.org/1999/xlink\"\r\n            x=\"0px\"\r\n            y=\"0px\"\r\n            viewBox=\"0 0 50 56.22\"\r\n            space=\"preserve\"\r\n          >\r\n            <path d=\"M27.8,42.1l8.6-15c1.3-2.3-0.3-5.1-3-5.1H16.2c-2.6,0-4.3,2.9-3,5.1l8.6,15C23.2,44.4,26.5,44.4,27.8,42.1z\" />\r\n\r\n            {/* <line className=\"st0\" x1=\"13.22\" y1=\"40.59\" x2=\"5.26\" y2=\"32.63\" /> */}\r\n          </svg>\r\n        </ScrollDownNotice>\r\n        <Border>\r\n          <Container className=\"welcome_container\">\r\n            <Contents>\r\n              {/* <Title>Pyoeng</Title> */}\r\n              <TitleImg\r\n                onAnimationEnd={() => {\r\n                  isScroll\r\n                    ? console.log(\"scrolled\")\r\n                    : violationRef.current.scrollIntoView({\r\n                        behavior: \"smooth\",\r\n                        block: \"start\",\r\n                      });\r\n                }}\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 125 100\"\r\n              >\r\n                <rect\r\n                  x=\"5.5\"\r\n                  y=\"33.17\"\r\n                  className=\"st0\"\r\n                  width=\"15\"\r\n                  height=\"60\"\r\n                />\r\n                <rect\r\n                  x=\"105.5\"\r\n                  y=\"33.17\"\r\n                  className=\"st0\"\r\n                  width=\"15\"\r\n                  height=\"60\"\r\n                />\r\n                <circle className=\"st0\" cx=\"42.06\" cy=\"52.23\" r=\"19.06\" />\r\n                <polygon\r\n                  className=\"st0\"\r\n                  points=\"78.4,34.07 65.45,34.07 65.44,34.08 65.44,47.05 89.68,71.29 102.64,71.29 102.65,71.28 102.65,58.32\"\r\n                />\r\n\r\n                <rect\r\n                  x=\"5.5\"\r\n                  y=\"33.17\"\r\n                  className=\" rect\"\r\n                  width=\"15\"\r\n                  height=\"60\"\r\n                />\r\n                <rect\r\n                  x=\"105.5\"\r\n                  y=\"33.17\"\r\n                  className=\" rect\"\r\n                  width=\"15\"\r\n                  height=\"60\"\r\n                />\r\n                <circle className=\" circle\" cx=\"42.06\" cy=\"52.23\" r=\"19.06\" />\r\n                <polygon\r\n                  className=\" poly\"\r\n                  points=\"78.4,34.07 65.45,34.07 65.44,34.08 65.44,47.05 89.68,71.29 102.64,71.29 102.65,71.28 102.65,58.32\"\r\n                />\r\n              </TitleImg>\r\n            </Contents>\r\n          </Container>\r\n        </Border>\r\n\r\n        <AbMainContainer className=\"ABMContainer\" ref={violationRef}>\r\n          <div className=\"main__introImage\">\r\n            <div\r\n              className=\"introContainer first\"\r\n              data-aos=\"fade-left\"\r\n              data-aos-offset=\"300\"\r\n            >\r\n              <div className=\"circle\">\r\n                <svg\r\n                  viewBox=\"0 0 186 180\"\r\n                  version=\"1.1\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <circle className=\"c\" cx=\"89.34\" cy=\"89.85\" r=\"85.71\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"text 01\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                저는 디자이너입니다.\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"introContainer second\"\r\n              data-aos=\"fade-right\"\r\n              data-aos-delay=\"700\"\r\n              data-aos-offset=\"300\"\r\n            >\r\n              <div className=\"polygon\">\r\n                <svg\r\n                  viewBox=\"186 0 186 180\"\r\n                  version=\"1.1\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <polygon\r\n                    className=\"p\"\r\n                    points=\"276.7,4.14 197.06,4.14 197.01,4.19 197.01,83.92 288.65,175.56 368.33,175.56 368.38,175.51 \r\n                              368.38,95.82 \"\r\n                  />\r\n                </svg>\r\n              </div>\r\n\r\n              <div className=\"text 02\" data-aos=\"fade-up\" data-aos-delay=\"800\">\r\n                그리고 엔지니어입니다.\r\n              </div>\r\n            </div>\r\n            <div className=\"text-holder\" data-aos=\"fade-up\"></div>\r\n          </div>\r\n\r\n          <div className=\"a text_container\">\r\n            <TextBox data-aos=\"fade-up\" data-aos-offset=\"300\">\r\n              <div className=\"box__title\">어떻게 그래?</div>\r\n              학부 과정으로 시각디자인을, 석사 과정으로 감성공학을 전공했습니다.\r\n              <br />\r\n              <br />\r\n              디자인을 배우던 중 인터랙티브 디자인, 미디어아트 등에 관심을 가져\r\n              구현 도구로서 유니티를 시작했고, 발전시키기 위해 공학 대학원을\r\n              진학하게 되었습니다.\r\n              <br />\r\n            </TextBox>\r\n\r\n            <TextBox data-aos=\"fade-up\" data-aos-offset=\"300\">\r\n              <div className=\"box__title\">데이터 기반 디자인을 지향</div>\r\n              UI/UX 관련 프로젝트들을 진행했었고 디자이너 직관을 넘은 데이터에\r\n              기반한 인터페이스와 사용자 플로우를 지향합니다.\r\n              <br />\r\n              사용자의 행태 분석 및 플로우 개선을 위한 데이터 수집을 염두하며\r\n              작업하려 노력합니다.\r\n              <br />\r\n              GUI 제작을 위한 그래픽 툴을, UX 구현을 위한 프로토타이핑 툴을\r\n              사용할 수 있습니다.\r\n            </TextBox>\r\n\r\n            <TextBox data-aos=\"fade-up\" data-aos-offset=\"300\">\r\n              <div className=\"box__title\">프로그래밍의 길로 나아가는중</div>\r\n              인터랙티브 플랫폼에 UI를 구현하는 프론트엔드를 목표로 하고\r\n              있습니다.\r\n              <br />\r\n              프론트엔드를 목표로 Unity, javascript, Swift를 학습했었고 사용할\r\n              수 있습니다.\r\n              <br />\r\n              시스템 생태계를 이해하여 가장 효율적인 디자인을 수행하는 것이\r\n              궁극적인 목표입니다.\r\n            </TextBox>\r\n\r\n            <TextBox data-aos=\"fade-up\" data-aos-offset=\"300\">\r\n              <div className=\"box__title\">예술과 기술의 줄타기</div>\r\n              미디어아트, 키네틱 아트 등 기술과 과학을 이용한 예술을 굉장히\r\n              좋아합니다.\r\n              <br />\r\n              유니티의 Visual graph, Shader Graph 등을 이용한 표현에 큰 관심을\r\n              갖고있습니다.\r\n              <br />\r\n              기술과 예술 양쪽으로 생각회로가 뻗쳐있기 때문에 일상의 자극에서도\r\n              복합적인 영감을 얻곤 합니다.\r\n            </TextBox>\r\n\r\n            <TextBox data-aos=\"fade-up\" data-aos-offset=\"300\">\r\n              <div className=\"box__title\">새로운 배움에 적극적</div>\r\n              배움의 동력은 발전하려는 욕심입니다.\r\n              <br />\r\n              발전하려는 욕구를 가지고 있기 때문에 학습에 높은 흥미를 보입니다.\r\n              <br />\r\n              새로운 기술에 흥미를 갖고 깨어있으려 노력하며 배움에 거부감이\r\n              적다고 자부합니다.\r\n              <br />\r\n              <br />\r\n              원하는것을 구현하기 위해 수단과 방법을 가리지 않고 이것저것\r\n              배웠습니다.\r\n              <br />\r\n              지금까지 배워온것들 대부분이 이러한 욕심에서 시작되었으며 앞으로도\r\n              거리낌없는 배움의 원동력으로 작용할 것 입니다.\r\n            </TextBox>\r\n\r\n            <TextBox data-aos=\"fade-up\" data-aos-offset=\"300\">\r\n              <div className=\"box__title\">사용 가능한 것들</div>\r\n              <i>🥇아주 익숙함</i>\r\n              <br />\r\n              XAML, 유니티, 그래픽 툴\r\n              <br />\r\n              <br />\r\n              <i>🥈익숙함</i>\r\n              <br />\r\n              C#, JS, Kotlin\r\n              <br />\r\n              <br />\r\n              <i>🥉해동이 필요</i>\r\n              <br />\r\n              Swift, Python, ML/DL\r\n            </TextBox>\r\n\r\n            <Link\r\n              style={{ marginBottom: \"5rem\" }}\r\n              to=\"/works\"\r\n              id=\"link-works\"\r\n              className=\"btn\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-offset=\"100\"\r\n            >\r\n              <WorksButton>이런 일들을 했어요</WorksButton>\r\n            </Link>\r\n\r\n            {/* <div\r\n              className=\"horizontal-divider\"\r\n              data-aos=\"fade-up\"\r\n              data-aos-delay=\"200\"\r\n            ></div> */}\r\n\r\n            {/* <div className=\"container\">\r\n                <button\r\n                  className=\"collapsible\"\r\n                  data-aos=\"fade-up\"\r\n                  data-aos-delay=\"200\"\r\n                >\r\n                  자세한 정보\r\n                </button>\r\n                <div\r\n                  id=\"coll\"\r\n                  className=\"coll-contents\"\r\n                  data-aos=\"fade-up\"\r\n                  data-aos-delay=\"200\"\r\n                >\r\n                  2010-2016 충북대학교 시각디자인과 졸업\r\n                  <br />\r\n                  2017-2019 상명대학교 감성공학과 졸업\r\n                  <br />\r\n                  2020-2021 Smart Diagosis 근무\r\n                </div>\r\n              </div> */}\r\n          </div>\r\n        </AbMainContainer>\r\n        {/* <Footer /> */}\r\n      </motion.div>\r\n    </>\r\n  );\r\n}\r\n\r\n//#endregion\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Route, Switch, useParams } from \"react-router-dom\";\r\n\r\n//Import pages\r\n// import { Contents, WorksList } from \"../pages/index\";\r\nimport {\r\n  notFound,\r\n  WorksList,\r\n  coc2016,\r\n  yng,\r\n  viaf,\r\n  doh,\r\n  gutsy,\r\n  cardivu,\r\n  heartfit,\r\n} from \".\";\r\n\r\nexport default function Works({ match }) {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.7 }}\r\n    >\r\n      <Switch>\r\n        <Route exact path={match.path} component={WorksList} />\r\n        <Route path={`${match.path}/:contentsId`} component={Contents} />\r\n\r\n        {/* <Route component={notFound} /> */}\r\n      </Switch>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nfunction Contents({ match, history }) {\r\n  let { contentsId } = useParams();\r\n\r\n  switch (contentsId) {\r\n    case \"coc2016\":\r\n      return coc2016({ match, history });\r\n\r\n    case \"yng\":\r\n      return yng({ match, history });\r\n\r\n    case \"viaf2021\":\r\n      return viaf({ match, history });\r\n\r\n    case \"gutsy\":\r\n      return gutsy({ match, history });\r\n\r\n    case \"heartfit\":\r\n      return heartfit({ match, history });\r\n\r\n    case \"doh\":\r\n      return doh({ match, history });\r\n\r\n    case \"cardivu\":\r\n      return cardivu({ match, history });\r\n\r\n    default:\r\n      //return 404;\r\n      return <div> 404 NOT FOUND. </div>;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport { Header, IntroHolder, ContributionChart } from \"../../components\";\r\n\r\nexport default function Coc2016({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = match.params.contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n    console.log(process.env.PUBLIC_URL);\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer>\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">Creative Open Campus</div>\r\n          <div className=\"02\">2016</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"14%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">다양한 경험이 가능했던 융합 프로젝트</div>\r\n                {/* <div className=\"bar_end\" /> */}\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  창의+융합형 인재 육성을 위해 다학계 분야 연구원들이 모인\r\n                  개방형 캠퍼스 프로젝트입니다.\r\n                  <br />\r\n                  Unity3D를 이용하여 가상 환경을 생성하여 빔프로젝터를 이용해\r\n                  공간에 투사한 뒤, 가상 환경을 제어할 수 있는 테이블을\r\n                  제작하였습니다.\r\n                  <br />\r\n                  가상 환경은 외부 데이터를 종합적으로 이용해 공간을 사용자의\r\n                  감성 상태에 따라 변경해줍니다.\r\n                  <br />\r\n                  <br />\r\n                  전체 내용 기획을 시작으로, 공간에 영상을 투사할 다수의\r\n                  프로젝터 제어, UX를 고려한 인터페이스 구성 및 소스 제작,\r\n                  Unity3D를 이용한 환경 개발, 테이블과 함께 사용한 외부\r\n                  하드웨어들에서 들어오는 데이터를 이용한 환경 제어 등을 맡아서\r\n                  진행하였습니다.\r\n                </div>\r\n              </div>\r\n              {/* COC 가이드 비디오 */}\r\n              <video muted controls className=\"items\" src={videoUrls[1]} />\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">Unity3D를 이용한 실시간 환경 구성</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  실시간으로 변화하는 환경을 구성하기 위해 Unity3D를\r\n                  이용하였습니다.\r\n                  <br />\r\n                  환경은 사용자의 감성 데이터와 표정, 동작등을 인식하고 종합하여\r\n                  감성 증강을 위해 변화합니다.\r\n                  <br />\r\n                  <br />\r\n                  유니티는 외부 하드웨어들에서 데이터를 받아 통합하는데도 사용\r\n                  되었습니다.\r\n                  <br />\r\n                  외부 하드웨어로 키넥트, 웹캠, 뇌파장비, 아두이노 심박 센서를\r\n                  사용했으며 데이터들은 유니티를 거쳐 가상 공간에\r\n                  반영되었습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[10]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"3 / 8 span\"}\r\n              objPos=\"0% 0\"\r\n            />\r\n            <ss.Holder__video\r\n              className=\"holder__video\"\r\n              autoPlay\r\n              muted\r\n              loop\r\n              controls={false}\r\n              src={videoUrls[0]}\r\n              column={\"2 / 10 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"2 / 5 span\"}\r\n              objPos=\"0% 0\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[1]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"7 / 5 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              alt=\"img01\"\r\n              column={\"2 / 10 span\"}\r\n              objPos=\"0% 0\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">터치 테이블 형태의 사용자 인터페이스</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  대형 테이블에 터치 기능을 구현했기 때문에, 사용자의 손이 닿는\r\n                  테이블 하단에 메인 인터페이스를 구성했습니다. 테이블 상단은\r\n                  현재 감성상태 등을 확인할 수 있는 대시보드로 사용했습니다.\r\n                  <br />\r\n                  감성과 표정, 동작인식등 다양한 인식 기능이 인지적 피로를\r\n                  유발할 수 있다고 판단하였기에 인터페이스는 최대한 간결하게\r\n                  제작했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[6]}\r\n              className=\"holder__image\"\r\n              column={\"2 / 5 span\"}\r\n              alt=\"img01\"\r\n              objPos=\"0% 0\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[5]}\r\n              className=\"holder__image\"\r\n              column={\"7 / 5 span\"}\r\n              alt=\"img02\"\r\n              objPos=\"90% 0\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 관련 결과물 제작</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  프로젝트의 결과물로 책자를 제작/배포하여 결과보고에서 좋은\r\n                  점수를 받았습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[7]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"2 / span 10\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[8]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"2 / span 5\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[9]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"7 / span 5\"}\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  이 프로젝트를 진행하며 프로그래밍 능력을 많이 발전시킬 수\r\n                  있었습니다.\r\n                  <br />\r\n                  유니티 플랫폼과 키넥트 등으로 이루어진 센서들을 통합해서\r\n                  사용해야 했기 때문에 데이터의 플로우와 절차등에 대해 심도있게\r\n                  고민할 수 있었습니다.\r\n                  <br />\r\n                  처음으로 해본 마감일이 정해져있던 프로젝트여서\r\n                  (반강제로)성장할 수 있었습니다. 기획부터 런칭까지, 프로젝트의\r\n                  모든 프로세스를 모두 함께 참여했기 때문에 기존 디자이너\r\n                  포지션에선 알기 힘들었던 다양한 부분들을 알게 되었습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\n\r\nexport default function Yng({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = match.params.contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"black\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">연애능력고사</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"23%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">얼굴 인식으로 알아보는 연애능력</div>\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  간단한 심리검사와 표정 짓기, 표정 알아맞추기 능력을 연애능력\r\n                  점수로 환산해줍니다.\r\n                  <br />\r\n                  (진짜로 연애능력과 연결되지는 않습니다)\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">연애의 색을 컨셉으로 제작</div>\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  사랑스러운 이미지를 위해 분홍색을 주색으로 설정하여\r\n                  진행했습니다.\r\n                  <br />\r\n                  주어진 작업 수행시간이 짧았기 때문에 각 단계마다 안내 영상을\r\n                  제작하여 작업 수행능력을 향상시켰습니다.\r\n                  <br />\r\n                  XML을 이용하여 Windows용 어플리케이션 UI를 제작했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n          <ss.ImageHolder height={\"30%\"}>\r\n            <ss.Holder__video\r\n              className=\"holder__video\"\r\n              autoPlay\r\n              muted\r\n              loop\r\n              controls={false}\r\n              src={videoUrls[0]}\r\n              column={\"5 / 4 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"1 / 12 span\"}\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 8 span\"}\r\n              alt=\"img_real\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  XML을 이용한 Windows application의 UI 제작은 처음이였는데,\r\n                  편의성이 굉장히 뛰어나 놀랐습니다.\r\n                  <br />첫 사용이였는데도 금방 익힐 수 있었고, 생각한대로 구현이\r\n                  되는 것이 재밌었습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n        <ss.BackBtn onClick={() => history.goBack()}>돌아가기</ss.BackBtn>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ss } from \"..\";\r\nimport { useScroll } from \"./CustomHooks\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nexport default function Viaf2021({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = match.params.contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  const { scrollY } = useScroll();\r\n\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n  const br = useRef();\r\n  const ref01 = useRef();\r\n  const ref02 = useRef();\r\n  var to01 = 0;\r\n  var to02 = 0;\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    to01 = ref01.current.offsetTop;\r\n    console.log(to01);\r\n    to02 = ref02.current.offsetTop;\r\n    console.log(to02);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">VIA Festival 2021</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      {/* <ss.SvgContainer className=\"SvgCon\">\r\n        <ss.SvgDiv\r\n          bott={() => {\r\n            //to01 > x > to02 일때\r\n            if (window.scrollY > to01 && window.scrollY < to02) {\r\n              console.log(\"HEWWW\");\r\n              return \"0%\";\r\n            }\r\n            return \"50%\";\r\n          }}\r\n        >\r\n          <object\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n          />\r\n        </ss.SvgDiv>\r\n      </ss.SvgContainer> */}\r\n\r\n      <ss.Background\r\n        ref={br}\r\n        onScroll={() => {\r\n          console.log(\"scrolled@\");\r\n        }}\r\n      >\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">가상의 미로를 탐방하는 웹 인터랙티브</div>\r\n              </div>\r\n\r\n              <div className=\"desc\">\r\n                <div>\r\n                  '길(VIA)'위에서 펼쳐져 온 비아페스티벌(VIA Festival)이\r\n                  코로나로 인해 온라인 축제로 진행되었습니다. 일반적인 온라인\r\n                  축제의 나열식 배치에서 벗어나 미로형태의 '길'을 구현함과\r\n                  동시에 '게임'형식을 접목하여 예술 작품을 감상하기 위한 과정을\r\n                  재현하였습니다. 사용자는 터치 조이스틱을 이용해 미로에 있는\r\n                  꽃(예술)을 만나게 됩니다.\r\n                </div>\r\n              </div>\r\n              <img\r\n                src={imagesUrls[7]}\r\n                className=\"holder__image\"\r\n                alt=\"concept\"\r\n                style={{ gridColumn: \"3 span\", width: \"100%\", height: \"auto\" }}\r\n              />\r\n              <div className=\"buttonHolder\">\r\n                <LinkButton\r\n                  btnText=\"체험해보기\"\r\n                  link=\"https://viaf2021.github.io/viaf2021/\"\r\n                />\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer dev\" ref={ref01}>\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">유니티 WebGL 프로젝트</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  프로젝트를 유니티의 WebGL로 빌드하여 웹에 게시하였습니다.\r\n                  <br />\r\n                  단조로운 길의 느낌을 미로에 표현해야 했기 때문에, 약간의\r\n                  재질만을 추가해 미로를 생성했습니다.\r\n                  <br />\r\n                  웹과 유니티를 연동하여 신호를 주고받기 위해 jslib 파일을\r\n                  생성하여 사용했습니다.\r\n                  <br />\r\n                  미로는 2D 벡터에서 3차원 fbx로 만든 뒤 유니티로 불러와\r\n                  사용했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[6]}\r\n              className=\"holder__image\"\r\n              alt=\"img01\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n\r\n            <ss.Holder__div column={\"4 / 6 span\"}>\r\n              <img\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  zIndex: \"2\",\r\n                  position: \"relative\",\r\n                }}\r\n                src={imagesUrls[9]}\r\n              ></img>\r\n              <video\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: \"9%\",\r\n                  top: \"3%\",\r\n                  height: \"92%\",\r\n                }}\r\n                autoPlay\r\n                muted\r\n                loop\r\n                controls={false}\r\n                src={videoUrls[0]}\r\n              ></video>\r\n            </ss.Holder__div>\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer des\" ref={ref02}>\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">꽃 컨셉에 충실하게</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  중심 컨셉이 꽃이였기 때문에 꽃의 이미지를 주요하게\r\n                  사용하였습니다.\r\n                  <br />\r\n                  꽃 모양으로 공연예술의 세가지 분류를 표현했습니다. 영상을 본\r\n                  뒤 팝업을 닫으면 꽃잎을 흩뿌려 정적인 공간에 부드러움을\r\n                  더하고자 했습니다.\r\n                  <br />\r\n                  팝업창에 꽃 손그림 이미지를 배치하여 공연예술의 분류를 제시,\r\n                  동시에 풍성한 이미지를 연출했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 8 span\"}\r\n              alt=\"img01\"\r\n              objPos=\"0% 0\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[5]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 8 span\"}\r\n              alt=\"img02\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[4]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 4 span\"}\r\n              alt=\"img03\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              column={\"7 / 4 span\"}\r\n              alt=\"img04\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  유니티의 멀티 플랫폼 디버깅 기능이 좋다 말만들었지 진짜로\r\n                  뛰어든건 처음이였기 때문에 굉장히 많이 헤맸습니다. 안드로이드\r\n                  기준으로 작업한 내용이 iOS에서는 전혀 동작하지 않는다던지 하는\r\n                  호환성 문제 때문에 낮은 WebGL 버전을 사용할 수 밖에\r\n                  없었습니다. 버전을 낮추게 되니 유니티의 Global Illumination\r\n                  렌더러에도 한계가 생겨 더 꾸미지 못한게 아쉬웠습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nexport default function Gutsy({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = match.params.contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">Gutsy</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"23%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">위장관 건강관리 어플리케이션</div>\r\n              </div>\r\n\r\n              <div className=\"desc\">\r\n                <div>사이드 프로젝트</div>\r\n              </div>\r\n\r\n              {/* <LinkButton link=\"https://viaf2021.github.io/viaf2021/\" /> */}\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">진행중인 사이드 프로젝트</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  위장관 건강을 위해 식습관, 생활 패턴을 기록하여 건강을\r\n                  추적하는 앱. 사용자의 배변활동, 식이, 스트레스 및 기분 정도를\r\n                  입력받아 분석하게 기획되었습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">유선형 디자인</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  소화기 이미지에서 오는 유기적인 느낌을 표현하고자 유선형\r\n                  디자인을 채택했습니다.\r\n                  <br />\r\n                  인터페이스는 둥근 형태를 기본형으로, 배경 장식들은 자유롭게\r\n                  흐르는 모양으로 제작했습니다.\r\n                  <br />\r\n                  기획 단계에서 부드러운 느낌을 주고 싶었기 때문에 파스텔톤에\r\n                  가까운 컬러를 사용했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 8 span\"}\r\n              alt=\"img01\"\r\n              objPos=\"0% 0\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[5]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 8 span\"}\r\n              alt=\"img02\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[4]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 4 span\"}\r\n              alt=\"img03\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              column={\"7 / 4 span\"}\r\n              alt=\"img04\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>완성이 안된게 아쉬운점이다~</div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nexport default function Heartfit({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = match.params.contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">HeartFit</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"23%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">얼굴인식으로 생체정보를 추론하는 앱</div>\r\n              </div>\r\n\r\n              <div className=\"desc\">\r\n                <div>\r\n                  감성과학센터에서 제작한 생체정보 추론 모바일 어플리케이션의\r\n                  UI를 제작/구현했습니다.\r\n                  <br />\r\n                  앱은 카메라로 얼굴을 인식하여 생체정보를 추론해줍니다.\r\n                  생체정보는 기록되고 시각화되어 사용자에게 제공됩니다.\r\n                </div>\r\n              </div>\r\n\r\n              <LinkButton\r\n                link=\"https://play.google.com/store/apps/details?id=com.gamsungtech.heartfit\"\r\n                btnText=\"구글 스토어 링크\"\r\n              />\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">XML을 이용한 인터페이스 구성</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  클라이언트에서 요구하는 화면 구성이 있었기 때문에 별다른\r\n                  기획단계 없이 제작을 시작했습니다.\r\n                  <br />\r\n                  얼굴을 인식한 알고리즘이 반환하는 값을 실시간으로 시각화하는\r\n                  작업을 진행했습니다.\r\n                  <br />\r\n                  알고리즘은 몇 가지의 수치값들과 표정분석 결과, 얼굴 정면 여부,\r\n                  정보들을 종합한 값을 추론합니다.\r\n                  <br />\r\n                  추론결과의 종류에 따라 각기 다른 시각화를 제작했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              alt=\"ui01\"\r\n              column={\"5 / 4 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[1]}\r\n              className=\"holder__image\"\r\n              alt=\"ui01\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              alt=\"graphs\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  이전까진 Android native에서는 XML을 이용한 UI제작과 단순한\r\n                  Java만을 사용했었는데, 이번 기회에 Java를 조금 더 알 수 있어서\r\n                  좋았습니다.\r\n                  <br />\r\n                  프로젝트에 Kotlin을 시도해보고 싶었는데 시간 문제상 뛰어들지\r\n                  못한 것이 아쉬움으로 남습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ss } from \"..\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nexport default function Doh({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = match.params.contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">Dancing on the Hills</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"14%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">멋져보여서 시작한 프로젝션 매핑 작업</div>\r\n              </div>\r\n\r\n              <div className=\"desc\">\r\n                <div>\r\n                  학부생일 당시 시도해본 프로젝션 매핑 프로젝트입니다.\r\n                  <br />\r\n                  하고싶은걸 해보자라는 생각으로 시작했습니다. 점-선-면의\r\n                  시각화를 중심 컨셉으로 잡았습니다.\r\n                  <br />\r\n                  점-선-면이 대상물 위에서 춤을 추는 것처럼 보여 제목을 \"Dancing\r\n                  on the hills\"로 지었습니다.\r\n                  <br />\r\n                  대상물을 제작해서 빔프로젝터로 영상을 투사했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">점-선-면을 표현해보자</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  배경음의 박자에 맞춰 발랄한 움직임들을 사용했습니다.\r\n                  <br />\r\n                  지루하지 않게 최대한 다양한 표현을 하려고 노력했습니다.\r\n                  <br />\r\n                  영상 중반부에 동기생들의 작업물 일부를 넣어 과제전의 인트로\r\n                  영상으로 사용했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n          <ss.ImageHolder>\r\n            <ss.Holder__iframe column={\"3 / 8 span\"}>\r\n              <iframe\r\n                width=\"100%\"\r\n                height=\"800\"\r\n                src=\"https://www.youtube.com/embed/L2ln5hDMPJM\"\r\n                title=\"DOH\"\r\n                rel=\"0\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; encrypted-media; gyroscope\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            </ss.Holder__iframe>\r\n\r\n            <ss.Holder__image\r\n              src={imagesUrls[0]}\r\n              className=\"holder__image\"\r\n              alt=\"img00\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[1]}\r\n              className=\"holder__image\"\r\n              alt=\"img01\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[6]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"3 / 4 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              alt=\"img03\"\r\n              column={\"7 / 4 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[7]}\r\n              className=\"holder__image\"\r\n              alt=\"img00\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  직접 만든 프로젝션 매핑이라 재미있었습니다.\r\n                  <br />\r\n                  작업이 예상한것 보다 더 손이 많이 갔지만, 아직까지도 좋은\r\n                  기억으로 남아있습니다.\r\n                  <br />\r\n                  대상물의 형태를 조금 더 적극적으로 이용했으면 좋았을 것 같은\r\n                  아쉬움이 남습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nexport default function Cardivu({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = match.params.contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">Cardivu</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"23%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">홍채인식을 통한 심박 추론 앱</div>\r\n              </div>\r\n\r\n              <div className=\"desc\">\r\n                <div>\r\n                  스마트폰 사용중 홍채를 분석하여 심박 및 심박변이 등을 얻는\r\n                  건강관리 앱입니다.\r\n                  <br />\r\n                  디자인과 iOS 앱 제작을 메인으로, Android 개발을 서브 직책으로\r\n                  수행했습니다.\r\n                </div>\r\n              </div>\r\n\r\n              {/* <LinkButton link=\"https://viaf2021.github.io/viaf2021/\" /> */}\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">건강관리 앱을 목표로</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  건강관리 앱을 목표로 했기 때문에 깔끔하며 신뢰를 줄 수 있는\r\n                  색을 컨셉으로 제작했습니다.\r\n                  <br />\r\n                  변수를 시각화하는 작업을 위해 그래프를 생성하는 컴포넌트를\r\n                  제작했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[0]}\r\n              className=\"holder__image\"\r\n              column={\"1 / 12 span\"}\r\n              alt=\"car_img_01\"\r\n              objPos=\"0% 0\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  회사 업무 프로젝트에 Swift를 사용해볼 수 있어서 좋았습니다.\r\n                  <br />\r\n                  앱 제작부터 출시까지 모든 프로세스를 경험해 볼 수 있었습니다.\r\n                  <br />\r\n                  전부 수행한것은 아니지만 JAVA를 이용한 안드로이드 개발도\r\n                  재밌었습니다.\r\n                  <br />\r\n                  Kotlin을 사용해보지 못했던 점이 아쉬움으로 남습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport styled from \"styled-components\";\r\n\r\n//Import Components\r\n// import CategoryTitleDiv from \"../components/CategoryTitleDiv\";\r\nimport ItemCell from \"../components/ItemCell\";\r\n\r\n//Import Style\r\nimport { MainContainer } from \"./sharedStyle\";\r\n\r\n//Import JSON data\r\nimport JSON_DATA from \"../Data3.json\";\r\n\r\nexport default function WorksList({ match }) {\r\n  const path = match.path;\r\n\r\n  //스크롤을 맨 위로... 상황에 따라 조건이 필요할지도\r\n  window.scrollTo(0, 0);\r\n\r\n  return (\r\n    <>\r\n      <Header nav=\"WORKS\" />\r\n\r\n      <MainContainer paddingToTop={\"10rem\"}>\r\n        <div className=\"itemList\">\r\n          {JSON_DATA &&\r\n            JSON_DATA.map((item) => {\r\n              return (\r\n                <ItemCell\r\n                  isConstruction={item.title.includes(\"공사중\")}\r\n                  key={item.id}\r\n                  path={path}\r\n                  alt={item.id}\r\n                  thumbImg={process.env.PUBLIC_URL + item.thumb_img}\r\n                  title={item.title}\r\n                  subtitle={item.subtitle}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\n211117 카테고리 있는 코드\r\n// const CategoryContainer = styled.div`\r\n//   float: left;\r\n//   width: 100%;\r\n//   margin-bottom: 5vh;\r\n// `;\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\r\n","import React from \"react\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport { Welcome, Works } from \"../pages/\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { GlobalStyle } from \"../pages/sharedStyle\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <AnimatePresence exitBeforeEnter>\r\n        <Switch location={location} key={location.pathname}>\r\n          <Route\r\n            history={history}\r\n            exact\r\n            path={[\"/pyp\", \"/\"]}\r\n            component={Welcome}\r\n          />\r\n          <Route history={history} path=\"/works\" component={Works} />\r\n          <Route history={history} render={() => <div>404 NOT FOUND.</div>} />\r\n        </Switch>\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"../shared/App\";\r\n\r\nconst Root = () => (\r\n  // 404.html 사용하기 이전\r\n  // <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n  <BrowserRouter basename=\"/pyp\">\r\n    <App></App>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Root from \"./client/Root\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./index.css\";\r\n \r\nReactDOM.render(\r\n  <Root></Root>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}