{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlvud\\\\Desktop\\\\react-web\\\\pyp\\\\src\\\\pages\\\\WorksList.jsx\";\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport styled from \"styled-components\"; //Import Components\n\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\nimport ItemCell from \"../components/ItemCell\"; //Import Style\n\nimport { MainContainer } from \"./sharedStyle\"; //Import JSON data\n\nimport JSON_DATA from \"../Data.json\";\nimport { render } from \"react-dom\"; // import JSON_DATA from \"../Data2.json\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryContainer = styled.div`\n  float: left;\n  width: 100%;\n  margin-bottom: 5vh;\n`;\n_c = CategoryContainer;\nexport default function WorksList({\n  match\n}) {\n  const path = match.path;\n  const catList = [\"UI/UX\", \"Graphics\", \"Web\"];\n  const data = JSON_DATA;\n  data.filter(object => {\n    console.log(object);\n  }); //스크롤을 맨 위로... 상황에 따라 조건이 필요할지도\n\n  window.scrollTo(0, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      nav: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: /*#__PURE__*/_jsxDEV(CategoryContainer, {\n          children: JSON_DATA && JSON_DATA.map((item, idx) => {\n            // JSON 오브젝트 나누기\n            var a = 0;\n            const [keys, entryValues] = Object.entries(item);\n            const categoryName = keys[0];\n            const innerDataArray = keys[1];\n            a += 1;\n            return (\n              /*#__PURE__*/\n              // 카테고리 / 내부데이터 나눠서 생성\n              _jsxDEV(CategoryContainer, {\n                children: [/*#__PURE__*/_jsxDEV(CategoryTitleDiv, {\n                  desc: categoryName\n                }, \"ct\" + idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), innerDataArray.map(element => {\n                  return /*#__PURE__*/_jsxDEV(ItemCell, {\n                    path: path,\n                    alt: element.id,\n                    thumbImg: process.env.PUBLIC_URL + element.thumb_img,\n                    title: element.title,\n                    category: element.description\n                  }, element.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, \"cc\" + idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            );\n          })\n        }, \"cc\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n/*\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\n\n_c2 = WorksList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CategoryContainer\");\n$RefreshReg$(_c2, \"WorksList\");","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/pages/WorksList.jsx"],"names":["React","Header","styled","CategoryTitleDiv","ItemCell","MainContainer","JSON_DATA","render","CategoryContainer","div","WorksList","match","path","catList","data","filter","object","console","log","window","scrollTo","map","item","idx","a","keys","entryValues","Object","entries","categoryName","innerDataArray","element","id","process","env","PUBLIC_URL","thumb_img","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,eAA9B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CACA;;;;AAEA,MAAMC,iBAAiB,GAAGN,MAAM,CAACO,GAAI;AACrC;AACA;AACA;AACA,CAJA;KAAMD,iB;AAMN,eAAe,SAASE,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAC3C,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMC,OAAO,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,KAAtB,CAAhB;AACA,QAAMC,IAAI,GAAGR,SAAb;AAEAQ,EAAAA,IAAI,CAACC,MAAL,CAAaC,MAAD,IAAY;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAFD,EAL2C,CAS3C;;AACAG,EAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,aAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,iBAAD;AAAA,oBACGd,SAAS,IACRA,SAAS,CAACe,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC3B;AACA,gBAAIC,CAAC,GAAG,CAAR;AACA,kBAAM,CAACC,IAAD,EAAOC,WAAP,IAAsBC,MAAM,CAACC,OAAP,CAAeN,IAAf,CAA5B;AACA,kBAAMO,YAAY,GAAGJ,IAAI,CAAC,CAAD,CAAzB;AACA,kBAAMK,cAAc,GAAGL,IAAI,CAAC,CAAD,CAA3B;AACAD,YAAAA,CAAC,IAAI,CAAL;AACA;AAAA;AACE;AACA,sBAAC,iBAAD;AAAA,wCACE,QAAC,gBAAD;AAAmC,kBAAA,IAAI,EAAEK;AAAzC,mBAAuB,OAAON,GAA9B;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGO,cAAc,CAACT,GAAf,CAAoBU,OAAD,IAAa;AAC/B,sCACE,QAAC,QAAD;AAEE,oBAAA,IAAI,EAAEnB,IAFR;AAGE,oBAAA,GAAG,EAAEmB,OAAO,CAACC,EAHf;AAIE,oBAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBJ,OAAO,CAACK,SAJ7C;AAKE,oBAAA,KAAK,EAAEL,OAAO,CAACM,KALjB;AAME,oBAAA,QAAQ,EAAEN,OAAO,CAACO;AANpB,qBACOP,OAAO,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,0BADF;AAUD,iBAXA,CAFH;AAAA,iBAAwB,OAAOT,GAA/B;AAAA;AAAA;AAAA;AAAA;AAFF;AAkBD,WAzBD;AAFJ,WAAwB,IAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAuCD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAlFwBb,S","sourcesContent":["import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport styled from \"styled-components\";\r\n\r\n//Import Components\r\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\r\nimport ItemCell from \"../components/ItemCell\";\r\n\r\n//Import Style\r\nimport { MainContainer } from \"./sharedStyle\";\r\n\r\n//Import JSON data\r\nimport JSON_DATA from \"../Data.json\";\r\nimport { render } from \"react-dom\";\r\n// import JSON_DATA from \"../Data2.json\";\r\n\r\nconst CategoryContainer = styled.div`\r\n  float: left;\r\n  width: 100%;\r\n  margin-bottom: 5vh;\r\n`;\r\n\r\nexport default function WorksList({ match }) {\r\n  const path = match.path;\r\n  const catList = [\"UI/UX\", \"Graphics\", \"Web\"];\r\n  const data = JSON_DATA;\r\n\r\n  data.filter((object) => {\r\n    console.log(object);\r\n  });\r\n\r\n  //스크롤을 맨 위로... 상황에 따라 조건이 필요할지도\r\n  window.scrollTo(0, 0);\r\n  return (\r\n    <>\r\n      <Header nav=\"Works\" />\r\n\r\n      <MainContainer>\r\n        <div className=\"list\">\r\n          <CategoryContainer key={\"cc\"}>\r\n            {JSON_DATA &&\r\n              JSON_DATA.map((item, idx) => {\r\n                // JSON 오브젝트 나누기\r\n                var a = 0;\r\n                const [keys, entryValues] = Object.entries(item);\r\n                const categoryName = keys[0];\r\n                const innerDataArray = keys[1];\r\n                a += 1;\r\n                return (\r\n                  // 카테고리 / 내부데이터 나눠서 생성\r\n                  <CategoryContainer key={\"cc\" + idx}>\r\n                    <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                    {innerDataArray.map((element) => {\r\n                      return (\r\n                        <ItemCell\r\n                          key={element.id}\r\n                          path={path}\r\n                          alt={element.id}\r\n                          thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                          title={element.title}\r\n                          category={element.description}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </CategoryContainer>\r\n                );\r\n              })}\r\n          </CategoryContainer>\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\r\n"]},"metadata":{},"sourceType":"module"}