{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlvud\\\\Desktop\\\\react-web\\\\pyp\\\\src\\\\pages\\\\WorksList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Header from \"../components/Header\"; //Import Components\n// import CategoryTitleDiv from \"../components/CategoryTitleDiv\";\n\nimport ItemCell from \"../components/ItemCell\"; //Import Style\n\nimport { MainContainer } from \"./sharedStyle\"; //Import JSON data\n\nimport JSON_DATA from \"../Data3.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WorksList({\n  match\n}) {\n  _s();\n\n  const path = match.path;\n  const data = JSON_DATA;\n  const worksList = [];\n  useEffect(() => {\n    data.map(item => {\n      worksList.push( /*#__PURE__*/_jsxDEV(ItemCell, {\n        path: path,\n        alt: item.id,\n        thumbImg: process.env.PUBLIC_URL + item.thumb_img,\n        title: item.title,\n        subtitle: item.subtitle\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this));\n    });\n  }); //스크롤을 맨 위로... 상황에 따라 조건이 필요할지도\n\n  window.scrollTo(0, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      nav: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n      paddingToTop: \"10rem\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemList\",\n        children: JSON_DATA && JSON_DATA.map(item => {\n          return /*#__PURE__*/_jsxDEV(ItemCell, {\n            path: path,\n            alt: item.id,\n            thumbImg: process.env.PUBLIC_URL + item.thumb_img,\n            title: item.title,\n            subtitle: item.subtitle\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n/*\r\n211117 카테고리 있는 코드\r\n// const CategoryContainer = styled.div`\r\n//   float: left;\r\n//   width: 100%;\r\n//   margin-bottom: 5vh;\r\n// `;\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\n\n_s(WorksList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = WorksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorksList\");","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/pages/WorksList.jsx"],"names":["React","useEffect","Header","ItemCell","MainContainer","JSON_DATA","WorksList","match","path","data","worksList","map","item","push","id","process","env","PUBLIC_URL","thumb_img","title","subtitle","window","scrollTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;AACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,eAA9B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,eAAtB;;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAAA;;AAC3C,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMC,IAAI,GAAGJ,SAAb;AACA,QAAMK,SAAS,GAAG,EAAlB;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AACjBF,MAAAA,SAAS,CAACG,IAAV,eACE,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEL,IAFR;AAGE,QAAA,GAAG,EAAEI,IAAI,CAACE,EAHZ;AAIE,QAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBL,IAAI,CAACM,SAJ1C;AAKE,QAAA,KAAK,EAAEN,IAAI,CAACO,KALd;AAME,QAAA,QAAQ,EAAEP,IAAI,CAACQ;AANjB,SACOR,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXD;AAYD,GAbQ,CAAT,CAJ2C,CAmB3C;;AACAO,EAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,aAAD;AAAe,MAAA,YAAY,EAAE,OAA7B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACGjB,SAAS,IACRA,SAAS,CAACM,GAAV,CAAeC,IAAD,IAAU;AACtB,8BACE,QAAC,QAAD;AAEE,YAAA,IAAI,EAAEJ,IAFR;AAGE,YAAA,GAAG,EAAEI,IAAI,CAACE,EAHZ;AAIE,YAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBL,IAAI,CAACM,SAJ1C;AAKE,YAAA,KAAK,EAAEN,IAAI,CAACO,KALd;AAME,YAAA,QAAQ,EAAEP,IAAI,CAACQ;AANjB,aACOR,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAuBD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAnFwBR,S;;KAAAA,S","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\n\r\n//Import Components\r\n// import CategoryTitleDiv from \"../components/CategoryTitleDiv\";\r\nimport ItemCell from \"../components/ItemCell\";\r\n\r\n//Import Style\r\nimport { MainContainer } from \"./sharedStyle\";\r\n\r\n//Import JSON data\r\nimport JSON_DATA from \"../Data3.json\";\r\n\r\nexport default function WorksList({ match }) {\r\n  const path = match.path;\r\n  const data = JSON_DATA;\r\n  const worksList = [];\r\n  useEffect(() => {\r\n    data.map((item) => {\r\n      worksList.push(\r\n        <ItemCell\r\n          key={item.id}\r\n          path={path}\r\n          alt={item.id}\r\n          thumbImg={process.env.PUBLIC_URL + item.thumb_img}\r\n          title={item.title}\r\n          subtitle={item.subtitle}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  //스크롤을 맨 위로... 상황에 따라 조건이 필요할지도\r\n  window.scrollTo(0, 0);\r\n\r\n  return (\r\n    <>\r\n      <Header nav=\"Works\" />\r\n\r\n      <MainContainer paddingToTop={\"10rem\"}>\r\n        <div className=\"itemList\">\r\n          {JSON_DATA &&\r\n            JSON_DATA.map((item) => {\r\n              return (\r\n                <ItemCell\r\n                  key={item.id}\r\n                  path={path}\r\n                  alt={item.id}\r\n                  thumbImg={process.env.PUBLIC_URL + item.thumb_img}\r\n                  title={item.title}\r\n                  subtitle={item.subtitle}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\n211117 카테고리 있는 코드\r\n// const CategoryContainer = styled.div`\r\n//   float: left;\r\n//   width: 100%;\r\n//   margin-bottom: 5vh;\r\n// `;\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\r\n"]},"metadata":{},"sourceType":"module"}