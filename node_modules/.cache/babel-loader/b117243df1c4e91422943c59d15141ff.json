{"ast":null,"code":"import _slicedToArray from\"C:/Users/tlvud/Desktop/react-web/pyp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/tlvud/Desktop/react-web/pyp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from\"react\";import Header from\"../components/Header\";import styled from\"styled-components\";//Import Components\nimport CategoryTitleDiv from\"../components/CategoryTitleDiv\";import ItemCell from\"../components/ItemCell\";//Import Style\nimport{MainContainer}from\"./sharedStyle\";//Import JSON data\n// import JSON_DATA from \"../Data.json\";\nimport JSON_DATA from\"../Data2.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CategoryContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  float: left;\\n  width: 100%;\\n  margin-bottom: 5vh;\\n\"])));export default function WorksList(_ref){var match=_ref.match;var path=match.path;console.log(path);//스크롤을 맨 위로... 상황에 따라 조건이 필요할지도\nwindow.scrollTo(0,0);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{nav:\"Works\"}),/*#__PURE__*/_jsx(MainContainer,{children:/*#__PURE__*/_jsx(\"div\",{className:\"itemList\",children:JSON_DATA&&JSON_DATA.map(function(item,idx){// JSON 오브젝트 나누기\nvar a=0;var _Object$entries=Object.entries(item),_Object$entries2=_slicedToArray(_Object$entries,2),keys=_Object$entries2[0],entryValues=_Object$entries2[1];var categoryName=keys[0];var innerDataArray=keys[1];a+=1;return/*#__PURE__*/ (// 카테고리 / 내부데이터 나눠서 생성\n_jsxs(CategoryContainer,{children:[/*#__PURE__*/_jsx(CategoryTitleDiv,{desc:categoryName},\"ct\"+idx),innerDataArray.map(function(element){return/*#__PURE__*/_jsx(ItemCell,{path:path,alt:element.id,thumbImg:process.env.PUBLIC_URL+element.thumb_img,title:element.title,subtitle:element.subtitle},element.id);})]},\"cc\"+idx));})})})]});}/*\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/pages/WorksList.jsx"],"names":["React","Header","styled","CategoryTitleDiv","ItemCell","MainContainer","JSON_DATA","CategoryContainer","div","WorksList","match","path","console","log","window","scrollTo","map","item","idx","a","Object","entries","keys","entryValues","categoryName","innerDataArray","element","id","process","env","PUBLIC_URL","thumb_img","title","subtitle"],"mappings":"0VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA;AACA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CAEA;AACA,OAASC,aAAT,KAA8B,eAA9B,CAEA;AACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,eAAtB,C,6IAEA,GAAMC,CAAAA,iBAAiB,CAAGL,MAAM,CAACM,GAAV,0HAAvB,CAMA,cAAe,SAASC,CAAAA,SAAT,MAA8B,IAATC,CAAAA,KAAS,MAATA,KAAS,CAC3C,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAnB,CAEAC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACA;AACAG,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACA,mBACE,wCACE,KAAC,MAAD,EAAQ,GAAG,CAAC,OAAZ,EADF,cAGE,KAAC,aAAD,wBACE,YAAK,SAAS,CAAC,UAAf,UACGT,SAAS,EACRA,SAAS,CAACU,GAAV,CAAc,SAACC,IAAD,CAAOC,GAAP,CAAe,CAC3B;AACA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,oBAA4BC,MAAM,CAACC,OAAP,CAAeJ,IAAf,CAA5B,oDAAOK,IAAP,qBAAaC,WAAb,qBACA,GAAMC,CAAAA,YAAY,CAAGF,IAAI,CAAC,CAAD,CAAzB,CACA,GAAMG,CAAAA,cAAc,CAAGH,IAAI,CAAC,CAAD,CAA3B,CACAH,CAAC,EAAI,CAAL,CACA,oBACE;AACA,MAAC,iBAAD,yBACE,KAAC,gBAAD,EAAmC,IAAI,CAAEK,YAAzC,EAAuB,KAAON,GAA9B,CADF,CAEGO,cAAc,CAACT,GAAf,CAAmB,SAACU,OAAD,CAAa,CAC/B,mBACE,KAAC,QAAD,EAEE,IAAI,CAAEf,IAFR,CAGE,GAAG,CAAEe,OAAO,CAACC,EAHf,CAIE,QAAQ,CAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAyBJ,OAAO,CAACK,SAJ7C,CAKE,KAAK,CAAEL,OAAO,CAACM,KALjB,CAME,QAAQ,CAAEN,OAAO,CAACO,QANpB,EACOP,OAAO,CAACC,EADf,CADF,CAUD,CAXA,CAFH,GAAwB,KAAOT,GAA/B,CAFF,EAkBD,CAzBD,CAFJ,EADF,EAHF,GADF,CAqCD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport styled from \"styled-components\";\r\n\r\n//Import Components\r\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\r\nimport ItemCell from \"../components/ItemCell\";\r\n\r\n//Import Style\r\nimport { MainContainer } from \"./sharedStyle\";\r\n\r\n//Import JSON data\r\n// import JSON_DATA from \"../Data.json\";\r\nimport JSON_DATA from \"../Data2.json\";\r\n\r\nconst CategoryContainer = styled.div`\r\n  float: left;\r\n  width: 100%;\r\n  margin-bottom: 5vh;\r\n`;\r\n\r\nexport default function WorksList({ match }) {\r\n  const path = match.path;\r\n\r\n  console.log(path);\r\n  //스크롤을 맨 위로... 상황에 따라 조건이 필요할지도\r\n  window.scrollTo(0, 0);\r\n  return (\r\n    <>\r\n      <Header nav=\"Works\" />\r\n\r\n      <MainContainer>\r\n        <div className=\"itemList\">\r\n          {JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        subtitle={element.subtitle}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\r\n"]},"metadata":{},"sourceType":"module"}