{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlvud\\\\Desktop\\\\react-web\\\\pyp\\\\src\\\\pages\\\\WorksList.jsx\";\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport styled from \"styled-components\"; //Import Components\n\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\nimport ItemCell from \"../components/ItemCell\"; //Import Style\n\nimport { MainContainer } from \"./sharedStyle\"; //Import JSON data\n\nimport data from \"../Data2.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryContainer = styled.div`\n  float: left;\n  width: 100%;\n  margin-bottom: 5vh;\n`;\n_c = CategoryContainer;\nexport default function WorksList({\n  match\n}) {\n  const path = match.path;\n  window.scrollTo(0, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      nav: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: data && data.map((item, idx) => {\n          // JSON 오브젝트 나누기\n          const [keys, entryValues] = Object.entries(item);\n          const categoryName = keys[0];\n          const innerDataArray = keys[1];\n          return (\n            /*#__PURE__*/\n            // 카테고리 / 내부데이터 나눠서 생성\n            _jsxDEV(CategoryContainer, {\n              children: [/*#__PURE__*/_jsxDEV(CategoryTitleDiv, {\n                desc: categoryName\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), innerDataArray.map(element => {\n                return /*#__PURE__*/_jsxDEV(ItemCell, {\n                  path: path,\n                  alt: element.id,\n                  thumbImg: process.env.PUBLIC_URL + element.thumb_img,\n                  title: element.title,\n                  category: element.description\n                }, element.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = WorksList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CategoryContainer\");\n$RefreshReg$(_c2, \"WorksList\");","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/pages/WorksList.jsx"],"names":["React","Header","styled","CategoryTitleDiv","ItemCell","MainContainer","data","CategoryContainer","div","WorksList","match","path","window","scrollTo","map","item","idx","keys","entryValues","Object","entries","categoryName","innerDataArray","element","id","process","env","PUBLIC_URL","thumb_img","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,eAA9B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,MAAMC,iBAAiB,GAAGL,MAAM,CAACM,GAAI;AACrC;AACA;AACA;AACA,CAJA;KAAMD,iB;AAMN,eAAe,SAASE,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAC3C,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,aAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACGP,IAAI,IACHA,IAAI,CAACQ,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,KAAe;AACtB;AACA,gBAAM,CAACC,IAAD,EAAOC,WAAP,IAAsBC,MAAM,CAACC,OAAP,CAAeL,IAAf,CAA5B;AACA,gBAAMM,YAAY,GAAGJ,IAAI,CAAC,CAAD,CAAzB;AACA,gBAAMK,cAAc,GAAGL,IAAI,CAAC,CAAD,CAA3B;AACA;AAAA;AACE;AACA,oBAAC,iBAAD;AAAA,sCACE,QAAC,gBAAD;AAA4B,gBAAA,IAAI,EAAEI;AAAlC,iBAAuBL,GAAvB;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGM,cAAc,CAACR,GAAf,CAAoBS,OAAD,IAAa;AAC/B,oCACE,QAAC,QAAD;AAEE,kBAAA,IAAI,EAAEZ,IAFR;AAGE,kBAAA,GAAG,EAAEY,OAAO,CAACC,EAHf;AAIE,kBAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBJ,OAAO,CAACK,SAJ7C;AAKE,kBAAA,KAAK,EAAEL,OAAO,CAACM,KALjB;AAME,kBAAA,QAAQ,EAAEN,OAAO,CAACO;AANpB,mBACOP,OAAO,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,wBADF;AAUD,eAXA,CAFH;AAAA,eAAwBR,GAAxB;AAAA;AAAA;AAAA;AAAA;AAFF;AAkBD,SAvBD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAmCD;MAvCuBP,S","sourcesContent":["import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport styled from \"styled-components\";\r\n\r\n//Import Components\r\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\r\nimport ItemCell from \"../components/ItemCell\";\r\n\r\n//Import Style\r\nimport { MainContainer } from \"./sharedStyle\";\r\n\r\n//Import JSON data\r\nimport data from \"../Data2.json\";\r\n\r\nconst CategoryContainer = styled.div`\r\n  float: left;\r\n  width: 100%;\r\n  margin-bottom: 5vh;\r\n`;\r\n\r\nexport default function WorksList({ match }) {\r\n  const path = match.path;\r\n  window.scrollTo(0, 0);\r\n\r\n  return (\r\n    <>\r\n      <Header nav=\"Works\" />\r\n\r\n      <MainContainer>\r\n        <div className=\"list\">\r\n          {data &&\r\n            data.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={idx}>\r\n                  <CategoryTitleDiv key={idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}