{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlvud\\\\Desktop\\\\react-web\\\\pyp\\\\src\\\\pages\\\\WorksList.jsx\";\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport styled from \"styled-components\"; //Import Components\n\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\nimport ItemCell from \"../components/ItemCell\"; //Import Style\n\nimport { MainContainer } from \"./sharedStyle\"; //Import JSON data\n\nimport JSON_DATA from \"../Data.json\"; // import JSON_DATA from \"../Data2.json\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryContainer = styled.div`\n  float: left;\n  width: 100%;\n  margin-bottom: 5vh;\n`;\n_c = CategoryContainer;\n\nfunction getJsonData(JSON) {\n  const catList = [\"UI/UX\", \"Graphics\", \"Web\"];\n  const uiData = JSON.filter(item => item.category == \"UI/UX\");\n  return /*#__PURE__*/_jsxDEV(ItemCell, {\n    path: path,\n    alt: uiData.id,\n    thumbImg: process.env.PUBLIC_URL + uiData.thumb_img,\n    title: uiData.title,\n    category: uiData.description\n  }, uiData.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function WorksList({\n  match\n}) {\n  const path = match.path; //\n\n  const dt = getJsonData(JSON_DATA);\n  console.log(dt); //\n\n  window.scrollTo(0, 0);\n  var categoryName = null;\n  var innerDataArray = null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      nav: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: /*#__PURE__*/_jsxDEV(CategoryContainer, {\n          children: /*#__PURE__*/_jsxDEV(CategoryTitleDiv, {\n            desc: categoryName\n          }, \"ct\" + idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, \"cc\" + idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n/*\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\n\n_c2 = WorksList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CategoryContainer\");\n$RefreshReg$(_c2, \"WorksList\");","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/pages/WorksList.jsx"],"names":["React","Header","styled","CategoryTitleDiv","ItemCell","MainContainer","JSON_DATA","CategoryContainer","div","getJsonData","JSON","catList","uiData","filter","item","category","path","id","process","env","PUBLIC_URL","thumb_img","title","description","WorksList","match","dt","console","log","window","scrollTo","categoryName","innerDataArray","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,eAA9B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CACA;;;;AAEA,MAAMC,iBAAiB,GAAGL,MAAM,CAACM,GAAI;AACrC;AACA;AACA;AACA,CAJA;KAAMD,iB;;AAMN,SAASE,WAAT,CAAqBC,IAArB,EAA2B;AACzB,QAAMC,OAAO,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,KAAtB,CAAhB;AACA,QAAMC,MAAM,GAAGF,IAAI,CAACG,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,QAAL,IAAiB,OAAvC,CAAf;AACA,sBACE,QAAC,QAAD;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,GAAG,EAAEJ,MAAM,CAACK,EAHd;AAIE,IAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBR,MAAM,CAACS,SAJ5C;AAKE,IAAA,KAAK,EAAET,MAAM,CAACU,KALhB;AAME,IAAA,QAAQ,EAAEV,MAAM,CAACW;AANnB,KACOX,MAAM,CAACK,EADd;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,eAAe,SAASO,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAC3C,QAAMT,IAAI,GAAGS,KAAK,CAACT,IAAnB,CAD2C,CAG3C;;AACA,QAAMU,EAAE,GAAGjB,WAAW,CAACH,SAAD,CAAtB;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAL2C,CAM3C;;AAEAG,EAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,cAAc,GAAG,IAArB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,aAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,iBAAD;AAAA,iCACE,QAAC,gBAAD;AAAmC,YAAA,IAAI,EAAED;AAAzC,aAAuB,OAAOE,GAA9B;AAAA;AAAA;AAAA;AAAA;AADF,WAAwB,OAAOA,GAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAaD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAzDwBT,S","sourcesContent":["import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport styled from \"styled-components\";\r\n\r\n//Import Components\r\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\r\nimport ItemCell from \"../components/ItemCell\";\r\n\r\n//Import Style\r\nimport { MainContainer } from \"./sharedStyle\";\r\n\r\n//Import JSON data\r\nimport JSON_DATA from \"../Data.json\";\r\n// import JSON_DATA from \"../Data2.json\";\r\n\r\nconst CategoryContainer = styled.div`\r\n  float: left;\r\n  width: 100%;\r\n  margin-bottom: 5vh;\r\n`;\r\n\r\nfunction getJsonData(JSON) {\r\n  const catList = [\"UI/UX\", \"Graphics\", \"Web\"];\r\n  const uiData = JSON.filter((item) => item.category == \"UI/UX\");\r\n  return (\r\n    <ItemCell\r\n      key={uiData.id}\r\n      path={path}\r\n      alt={uiData.id}\r\n      thumbImg={process.env.PUBLIC_URL + uiData.thumb_img}\r\n      title={uiData.title}\r\n      category={uiData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function WorksList({ match }) {\r\n  const path = match.path;\r\n\r\n  //\r\n  const dt = getJsonData(JSON_DATA);\r\n  console.log(dt);\r\n  //\r\n\r\n  window.scrollTo(0, 0);\r\n  var categoryName = null;\r\n  var innerDataArray = null;\r\n\r\n  return (\r\n    <>\r\n      <Header nav=\"Works\" />\r\n\r\n      <MainContainer>\r\n        <div className=\"list\">\r\n          <CategoryContainer key={\"cc\" + idx}>\r\n            <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n          </CategoryContainer>\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\r\n"]},"metadata":{},"sourceType":"module"}