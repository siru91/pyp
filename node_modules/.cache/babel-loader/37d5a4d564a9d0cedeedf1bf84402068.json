{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlvud\\\\Desktop\\\\react-web\\\\pyp\\\\src\\\\pages\\\\Coc2016.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ss } from \".\";\nimport ImageGallery from \"react-image-gallery\";\nimport JSON_DATA from \"../Data2.json\";\nimport Header from \"../components/Header\";\nimport Items from \"./Contents__Items\";\nimport gallStyle from \"./Gallery.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Coc2016() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"COC page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n} // export default function Coc2016({ match, history }) {\n//   // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\n//   const contentsId = match.params.contentsId;\n//   const [isScrolled, setScrollActive] = useState(false);\n//   const [backType, setBackType] = useState(\"img\");\n//   var textData = {};\n//   var data = null;\n//   var imagesUrls = [];\n//   var videoUrls = [];\n//   window.scrollTo(0, 0);\n//   JSON_DATA.map((item) => {\n//     // JSON 오브젝트 나누기\n//     const [keys, entryValues] = Object.entries(item);\n//     keys[1].map((element) => {\n//       if (element.id == contentsId) {\n//         textData[0] = element;\n//         return;\n//       }\n//     });\n//   });\n//   //이미지 배열의 형태 변경\n//   data = textData[0];\n//   data.images.map((item) => {\n//     imagesUrls.push({ original: process.env.PUBLIC_URL + item });\n//     return;\n//   });\n//   data.videos.map((item) => {\n//     videoUrls.push(process.env.PUBLIC_URL + item);\n//     return;\n//   });\n//   useEffect(() => {\n//     setBackType(data.banner_type);\n//   });\n//   //Render\n//   return (\n//     <>\n//       <Header nav={\"WORKS\"} />\n//       <ss.HeadContainer>\n//         {backType === \"img\" && (\n//           <ss.HeadContainerImg\n//             imageUrl={data.link_banner}\n//             bannerType={data.banner_type}\n//           ></ss.HeadContainerImg>\n//         )}\n//         {backType === \"vid\" && (\n//           <>\n//             <ss.HeadContainerVid\n//               autoPlay\n//               muted\n//               loop\n//               bannerType={data.banner_type}\n//             >\n//               <source\n//                 src={process.env.PUBLIC_URL + data.link_banner}\n//                 type=\"video/mp4\"\n//               ></source>\n//             </ss.HeadContainerVid>\n//           </>\n//         )}\n//         <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn>\n//         <ss.HeaderTextHolder>\n//           <div className=\"title\">{data.title}</div>\n//           <div className=\"subtitle\">{data.subtitle}</div>\n//           <div className=\"desc\">{data.period}</div>\n//         </ss.HeaderTextHolder>\n//       </ss.HeadContainer>\n//       <ss.MainContainer\n//         className={isScrolled ? \"scrolled\" : \"\"}\n//         paddingTop=\"20rem\"\n//       >\n//         <ss.SvgImg\n//           type=\"image/svg+xml\"\n//           data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\n//           top=\"230%\"\n//           left=\"-20%\"\n//         />\n//         {/* <SvgImg\n//           className=\"svgPoly\"\n//           type=\"image/svg+xml\"\n//           data={process.env.PUBLIC_URL + \"/img/svg/poly_01.svg\"}\n//           top={\"250%\"}\n//           right={\"-20%\"}\n//         /> */}\n//         <div className=\"subContainer\">\n//           <ss.TextHolder first={true}>\n//             <div className=\"title\">\n//               <div className=\"bar_start\" />\n//               <div className=\"text\">프로젝트 정보</div>\n//               <div className=\"bar_end\" />\n//             </div>\n//             <div className=\"desc\">\n//               <Items name={data.id} />\n//             </div>\n//             <video controls muted className=\"items\" src={videoUrls[0]} />\n//           </ss.TextHolder>\n//           <ss.ImageGallery\n//             style={gallStyle}\n//             items={imagesUrls}\n//             showFullscreenButton={false}\n//             showPlayButton={false}\n//             showBullets={true}\n//           />\n//           {/* <TextHolder>\n//           <HolderTitle>프로젝트에 사용한 기술</HolderTitle>\n//             <HolderDesc>\n//               <ul>\n//                 {data.method.map((item, key) => {\n//                   return <li key={key}>{item}</li>;\n//                 })}\n//               </ul>\n//             </HolderDesc>\n//           </TextHolder> */}\n//         </div>\n//         <ss.TechHolder>\n//           <ss.TechHolderTitle>담당업무 / 기여도</ss.TechHolderTitle>\n//           <ss.TechHolderDesc>\n//             {data.my_job.map((item, idx) => {\n//               const [key, val] = Object.entries(item);\n//               // console.log(key);\n//               // console.log(item.key);\n//               return (\n//                 <ss.TechContainer key={idx}>\n//                   <div className=\"tech-tmb\"></div>\n//                   <div className=\"tech-title\">{key[0]}</div>\n//                   {/* <div className=\"tech-percent\">{key[1]}</div> */}\n//                 </ss.TechContainer>\n//               );\n//             })}\n//           </ss.TechHolderDesc>\n//         </ss.TechHolder>\n//         <div className=\"subContainer\">\n//           {/* Result */}\n//           <ss.ColumnTitle>결과</ss.ColumnTitle>\n//           <ss.TextHolder>\n//             <ss.HolderTitle>자체 평가</ss.HolderTitle>\n//             <ss.HolderDesc>{data.earned}</ss.HolderDesc>\n//           </ss.TextHolder>\n//         </div>\n//       </ss.MainContainer>\n//     </>\n//   );\n// }\n\n_c = Coc2016;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coc2016\");","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/pages/Coc2016.jsx"],"names":["React","useState","useEffect","styled","css","ss","ImageGallery","JSON_DATA","Header","Items","gallStyle","Coc2016"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,EAAT,QAAmB,GAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAOC,SAAP,MAAsB,eAAtB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA3JwBA,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ss } from \".\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport JSON_DATA from \"../Data2.json\";\r\nimport Header from \"../components/Header\";\r\nimport Items from \"./Contents__Items\";\r\n\r\nimport gallStyle from \"./Gallery.css\";\r\n\r\nexport default function Coc2016() {\r\n  return <div>COC page</div>;\r\n}\r\n\r\n// export default function Coc2016({ match, history }) {\r\n//   // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n//   const contentsId = match.params.contentsId;\r\n//   const [isScrolled, setScrollActive] = useState(false);\r\n//   const [backType, setBackType] = useState(\"img\");\r\n//   var textData = {};\r\n//   var data = null;\r\n//   var imagesUrls = [];\r\n//   var videoUrls = [];\r\n\r\n//   window.scrollTo(0, 0);\r\n\r\n//   JSON_DATA.map((item) => {\r\n//     // JSON 오브젝트 나누기\r\n//     const [keys, entryValues] = Object.entries(item);\r\n//     keys[1].map((element) => {\r\n//       if (element.id == contentsId) {\r\n//         textData[0] = element;\r\n//         return;\r\n//       }\r\n//     });\r\n//   });\r\n//   //이미지 배열의 형태 변경\r\n//   data = textData[0];\r\n\r\n//   data.images.map((item) => {\r\n//     imagesUrls.push({ original: process.env.PUBLIC_URL + item });\r\n//     return;\r\n//   });\r\n\r\n//   data.videos.map((item) => {\r\n//     videoUrls.push(process.env.PUBLIC_URL + item);\r\n//     return;\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     setBackType(data.banner_type);\r\n//   });\r\n\r\n//   //Render\r\n//   return (\r\n//     <>\r\n//       <Header nav={\"WORKS\"} />\r\n//       <ss.HeadContainer>\r\n//         {backType === \"img\" && (\r\n//           <ss.HeadContainerImg\r\n//             imageUrl={data.link_banner}\r\n//             bannerType={data.banner_type}\r\n//           ></ss.HeadContainerImg>\r\n//         )}\r\n//         {backType === \"vid\" && (\r\n//           <>\r\n//             <ss.HeadContainerVid\r\n//               autoPlay\r\n//               muted\r\n//               loop\r\n//               bannerType={data.banner_type}\r\n//             >\r\n//               <source\r\n//                 src={process.env.PUBLIC_URL + data.link_banner}\r\n//                 type=\"video/mp4\"\r\n//               ></source>\r\n//             </ss.HeadContainerVid>\r\n//           </>\r\n//         )}\r\n//         <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn>\r\n//         <ss.HeaderTextHolder>\r\n//           <div className=\"title\">{data.title}</div>\r\n//           <div className=\"subtitle\">{data.subtitle}</div>\r\n//           <div className=\"desc\">{data.period}</div>\r\n//         </ss.HeaderTextHolder>\r\n//       </ss.HeadContainer>\r\n\r\n//       <ss.MainContainer\r\n//         className={isScrolled ? \"scrolled\" : \"\"}\r\n//         paddingTop=\"20rem\"\r\n//       >\r\n//         <ss.SvgImg\r\n//           type=\"image/svg+xml\"\r\n//           data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n//           top=\"230%\"\r\n//           left=\"-20%\"\r\n//         />\r\n//         {/* <SvgImg\r\n//           className=\"svgPoly\"\r\n//           type=\"image/svg+xml\"\r\n//           data={process.env.PUBLIC_URL + \"/img/svg/poly_01.svg\"}\r\n//           top={\"250%\"}\r\n//           right={\"-20%\"}\r\n//         /> */}\r\n\r\n//         <div className=\"subContainer\">\r\n//           <ss.TextHolder first={true}>\r\n//             <div className=\"title\">\r\n//               <div className=\"bar_start\" />\r\n//               <div className=\"text\">프로젝트 정보</div>\r\n//               <div className=\"bar_end\" />\r\n//             </div>\r\n//             <div className=\"desc\">\r\n//               <Items name={data.id} />\r\n//             </div>\r\n//             <video controls muted className=\"items\" src={videoUrls[0]} />\r\n//           </ss.TextHolder>\r\n\r\n//           <ss.ImageGallery\r\n//             style={gallStyle}\r\n//             items={imagesUrls}\r\n//             showFullscreenButton={false}\r\n//             showPlayButton={false}\r\n//             showBullets={true}\r\n//           />\r\n\r\n//           {/* <TextHolder>\r\n//           <HolderTitle>프로젝트에 사용한 기술</HolderTitle>\r\n//             <HolderDesc>\r\n//               <ul>\r\n//                 {data.method.map((item, key) => {\r\n//                   return <li key={key}>{item}</li>;\r\n//                 })}\r\n//               </ul>\r\n//             </HolderDesc>\r\n//           </TextHolder> */}\r\n//         </div>\r\n//         <ss.TechHolder>\r\n//           <ss.TechHolderTitle>담당업무 / 기여도</ss.TechHolderTitle>\r\n//           <ss.TechHolderDesc>\r\n//             {data.my_job.map((item, idx) => {\r\n//               const [key, val] = Object.entries(item);\r\n//               // console.log(key);\r\n//               // console.log(item.key);\r\n//               return (\r\n//                 <ss.TechContainer key={idx}>\r\n//                   <div className=\"tech-tmb\"></div>\r\n//                   <div className=\"tech-title\">{key[0]}</div>\r\n//                   {/* <div className=\"tech-percent\">{key[1]}</div> */}\r\n//                 </ss.TechContainer>\r\n//               );\r\n//             })}\r\n//           </ss.TechHolderDesc>\r\n//         </ss.TechHolder>\r\n//         <div className=\"subContainer\">\r\n//           {/* Result */}\r\n//           <ss.ColumnTitle>결과</ss.ColumnTitle>\r\n//           <ss.TextHolder>\r\n//             <ss.HolderTitle>자체 평가</ss.HolderTitle>\r\n//             <ss.HolderDesc>{data.earned}</ss.HolderDesc>\r\n//           </ss.TextHolder>\r\n//         </div>\r\n//       </ss.MainContainer>\r\n//     </>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}