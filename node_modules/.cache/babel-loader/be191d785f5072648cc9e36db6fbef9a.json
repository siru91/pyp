{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlvud\\\\Desktop\\\\react-web\\\\pyp\\\\src\\\\pages\\\\Works__\\\\Viaf2021.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ss } from \"..\"; // import JSON_DATA from \"../../Data2.json\";\n\nimport JSON_DATA from \"../../Data3.json\";\nimport Header from \"../../components/Header\";\nimport IntroHolder from \"../../components/IntroHolder\";\nimport ContributionChart from \"../../components/ContributionChart\";\nimport LinkButton from \"../../components/Button\";\nimport { fetchJsonData } from \"../../shared/FetchApi\"; // import {* as viaf} from \"../../image\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Viaf2021({\n  match,\n  history\n}) {\n  _s();\n\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\n  var data = null;\n  var imagesUrls = [];\n  var imagesObjectUrls = [];\n  var videoUrls = [];\n  const contentsId = match.params.contentsId; // const [currentData, setCurrentData] = useState(() => {\n  //   JSON_DATA.map((item) => {\n  //     if (item.id == contentsId) {\n  //       data = item;\n  //       data.images.map((item) => {\n  //         //배열 형태에 전달\n  //         imagesUrls.push(process.env.PUBLIC_URL + item);\n  //         //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\n  //         imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\n  //         return;\n  //       });\n  //       // 비디오+public 폴더 주소 합치기\n  //       data.videos.map((item) => {\n  //         videoUrls.push(process.env.PUBLIC_URL + item);\n  //         return;\n  //       });\n  //     } else {\n  //       return <div>Somethings wrong!</div>;\n  //     }\n  //   });\n  // });\n\n  const [isScrolled, setScrollActive] = useState(false);\n  const [scrollValue, setScrollValue] = useState(0); //Test\n\n  const resource = fetchJsonData(contentsId);\n  console.log(resource);\n\n  const handleScroll = () => {\n    const scrollPos = window.scrollY;\n    setScrollValue(scrollPos);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    window.removeEventListener(\"scroll\", handleScroll);\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  function IntroPage() {\n    const data = resource.data.read();\n    console.log(\"title::\" + data);\n    return /*#__PURE__*/_jsxDEV(IntroHolder, {\n      title: data.title,\n      client: data.client,\n      period: data.period,\n      subtitle: data.subtitle,\n      team: data.team // results={data.results.map((item, idx) => {\n      //   return (\n      //     <span key={idx}>\n      //       {item}\n      //       <br />\n      //     </span>\n      //   );\n      // })}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  } // JSON_DATA.map((item) => {\n  //   if (item.id == contentsId) {\n  //     data = item;\n  //     return;\n  //   }\n  //   return <div>Somethings wrong!</div>;\n  // });\n  // // 이미지+public 폴더 주소 합치기\n  // data.images.map((item) => {\n  //   //배열 형태에 전달\n  //   imagesUrls.push(process.env.PUBLIC_URL + item);\n  //   //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\n  //   imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\n  //   return;\n  // });\n  // // 비디오+public 폴더 주소 합치기\n  // data.videos.map((item) => {\n  //   videoUrls.push(process.env.PUBLIC_URL + item);\n  //   return;\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      nav: \"WORKS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ss.HeadContainer, {\n      textColor: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(ss.HeadContainerImg, {\n        src: require(\"../../image/vban.jpg\").default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleText Holder\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"01\",\n          children: \"VIA Festival 2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading profile...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(IntroPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Viaf2021, \"ZvHgJT9RYmiXrudPm8e604jZE7M=\");\n\n_c = Viaf2021;\n\nvar _c;\n\n$RefreshReg$(_c, \"Viaf2021\");","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/pages/Works__/Viaf2021.jsx"],"names":["React","useState","useEffect","Suspense","styled","css","ss","JSON_DATA","Header","IntroHolder","ContributionChart","LinkButton","fetchJsonData","Viaf2021","match","history","data","imagesUrls","imagesObjectUrls","videoUrls","contentsId","params","isScrolled","setScrollActive","scrollValue","setScrollValue","resource","console","log","handleScroll","scrollPos","window","scrollY","scrollTo","removeEventListener","addEventListener","IntroPage","read","title","client","period","subtitle","team","require","default"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Suspense } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nimport { fetchJsonData } from \"../../shared/FetchApi\";\r\n\r\n// import {* as viaf} from \"../../image\";\r\n\r\nexport default function Viaf2021({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n  const contentsId = match.params.contentsId;\r\n  // const [currentData, setCurrentData] = useState(() => {\r\n  //   JSON_DATA.map((item) => {\r\n  //     if (item.id == contentsId) {\r\n  //       data = item;\r\n\r\n  //       data.images.map((item) => {\r\n  //         //배열 형태에 전달\r\n  //         imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n  //         //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n  //         imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n  //         return;\r\n  //       });\r\n\r\n  //       // 비디오+public 폴더 주소 합치기\r\n  //       data.videos.map((item) => {\r\n  //         videoUrls.push(process.env.PUBLIC_URL + item);\r\n  //         return;\r\n  //       });\r\n  //     } else {\r\n  //       return <div>Somethings wrong!</div>;\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  const [scrollValue, setScrollValue] = useState(0);\r\n\r\n  //Test\r\n  const resource = fetchJsonData(contentsId);\r\n  console.log(resource);\r\n\r\n  const handleScroll = () => {\r\n    const scrollPos = window.scrollY;\r\n    setScrollValue(scrollPos);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    window.removeEventListener(\"scroll\", handleScroll);\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  function IntroPage() {\r\n    const data = resource.data.read();\r\n    console.log(\"title::\" + data);\r\n    return (\r\n      <IntroHolder\r\n        title={data.title}\r\n        client={data.client}\r\n        period={data.period}\r\n        subtitle={data.subtitle}\r\n        team={data.team}\r\n        // results={data.results.map((item, idx) => {\r\n        //   return (\r\n        //     <span key={idx}>\r\n        //       {item}\r\n        //       <br />\r\n        //     </span>\r\n        //   );\r\n        // })}\r\n      />\r\n    );\r\n  }\r\n\r\n  // JSON_DATA.map((item) => {\r\n  //   if (item.id == contentsId) {\r\n  //     data = item;\r\n  //     return;\r\n  //   }\r\n  //   return <div>Somethings wrong!</div>;\r\n  // });\r\n\r\n  // // 이미지+public 폴더 주소 합치기\r\n  // data.images.map((item) => {\r\n  //   //배열 형태에 전달\r\n  //   imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n  //   //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n  //   imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n  //   return;\r\n  // });\r\n\r\n  // // 비디오+public 폴더 주소 합치기\r\n  // data.videos.map((item) => {\r\n  //   videoUrls.push(process.env.PUBLIC_URL + item);\r\n  //   return;\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <ss.HeadContainerImg src={require(\"../../image/vban.jpg\").default} />\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">VIA Festival 2021</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n      <Suspense fallback={<h1>Loading profile...</h1>}>\r\n        <IntroPage />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}