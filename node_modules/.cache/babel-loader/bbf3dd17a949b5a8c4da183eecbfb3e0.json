{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlvud\\\\Desktop\\\\react-web\\\\pyp\\\\src\\\\pages\\\\WorksList.jsx\";\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport styled from \"styled-components\"; //Import Components\n\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\nimport ItemCell from \"../components/ItemCell\"; //Import Style\n\nimport { MainContainer } from \"./sharedStyle\"; //Import JSON data\n// import JSON_DATA from \"../Data.json\";\n// import JSON_DATA from \"../Data2.json\";\n\nimport JSON_DATA from \"../Data3.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryContainer = styled.div`\n  float: left;\n  width: 100%;\n  margin-bottom: 5vh;\n`;\nexport default function WorksList({\n  match\n}) {\n  const path = match.path;\n  console.log(path); //스크롤을 맨 위로... 상황에 따라 조건이 필요할지도\n\n  window.scrollTo(0, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      nav: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n      paddingToTop: \"15rem\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemList\",\n        children: JSON_DATA && JSON_DATA.map((item, idx) => {\n          // JSON 오브젝트 나누기\n          console.dir(item);\n          console.log(idx);\n          const categoryName = item.category;\n          return (\n            /*#__PURE__*/\n            // 카테고리 / 내부데이터 나눠서 생성\n            _jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(ItemCell, {\n                path: path,\n                alt: item.id,\n                thumbImg: process.env.PUBLIC_URL + item.thumb_img,\n                title: item.title,\n                subtitle: item.subtitle\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n/*\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\n\n_c = WorksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorksList\");","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/pages/WorksList.jsx"],"names":["React","Header","styled","CategoryTitleDiv","ItemCell","MainContainer","JSON_DATA","CategoryContainer","div","WorksList","match","path","console","log","window","scrollTo","map","item","idx","dir","categoryName","category","id","process","env","PUBLIC_URL","thumb_img","title","subtitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,eAA9B,C,CAEA;AACA;AACA;;AACA,OAAOC,SAAP,MAAsB,eAAtB;;;AAEA,MAAMC,iBAAiB,GAAGL,MAAM,CAACM,GAAI;AACrC;AACA;AACA;AACA,CAJA;AAMA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAC3C,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAH2C,CAI3C;;AACAG,EAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,aAAD;AAAe,MAAA,YAAY,EAAE,OAA7B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACGT,SAAS,IACRA,SAAS,CAACU,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC3B;AACAN,UAAAA,OAAO,CAACO,GAAR,CAAYF,IAAZ;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA,gBAAME,YAAY,GAAGH,IAAI,CAACI,QAA1B;AAEA;AAAA;AACE;AACA;AAAA,qCACE,QAAC,QAAD;AAEE,gBAAA,IAAI,EAAEV,IAFR;AAGE,gBAAA,GAAG,EAAEM,IAAI,CAACK,EAHZ;AAIE,gBAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBR,IAAI,CAACS,SAJ1C;AAKE,gBAAA,KAAK,EAAET,IAAI,CAACU,KALd;AAME,gBAAA,QAAQ,EAAEV,IAAI,CAACW;AANjB,iBACOX,IAAI,CAACK,EADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAFF;AAaD,SAnBD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA+BD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KArEwBb,S","sourcesContent":["import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport styled from \"styled-components\";\r\n\r\n//Import Components\r\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\r\nimport ItemCell from \"../components/ItemCell\";\r\n\r\n//Import Style\r\nimport { MainContainer } from \"./sharedStyle\";\r\n\r\n//Import JSON data\r\n// import JSON_DATA from \"../Data.json\";\r\n// import JSON_DATA from \"../Data2.json\";\r\nimport JSON_DATA from \"../Data3.json\";\r\n\r\nconst CategoryContainer = styled.div`\r\n  float: left;\r\n  width: 100%;\r\n  margin-bottom: 5vh;\r\n`;\r\n\r\nexport default function WorksList({ match }) {\r\n  const path = match.path;\r\n\r\n  console.log(path);\r\n  //스크롤을 맨 위로... 상황에 따라 조건이 필요할지도\r\n  window.scrollTo(0, 0);\r\n  return (\r\n    <>\r\n      <Header nav=\"Works\" />\r\n\r\n      <MainContainer paddingToTop={\"15rem\"}>\r\n        <div className=\"itemList\">\r\n          {JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              console.dir(item);\r\n              console.log(idx);\r\n              const categoryName = item.category;\r\n\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <>\r\n                  <ItemCell\r\n                    key={item.id}\r\n                    path={path}\r\n                    alt={item.id}\r\n                    thumbImg={process.env.PUBLIC_URL + item.thumb_img}\r\n                    title={item.title}\r\n                    subtitle={item.subtitle}\r\n                  />\r\n                </>\r\n              );\r\n            })}\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\n\r\n{JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n \r\n */\r\n"]},"metadata":{},"sourceType":"module"}