{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlvud\\\\Desktop\\\\react-web\\\\pyp\\\\src\\\\pages\\\\WorksList.jsx\";\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport styled from \"styled-components\"; //Import Components\n\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\nimport ItemCell from \"../components/ItemCell\"; //Import Style\n\nimport { MainContainer } from \"./sharedStyle\"; //Import JSON data\n\nimport JSON_DATA from \"../Data2.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryContainer = styled.div`\n  float: left;\n  width: 100%;\n  margin-bottom: 5vh;\n`;\n_c = CategoryContainer;\n\nfunction getJsonData(JSON) {\n  var key = null;\n  var value = null;\n  JSON.map((item, idx) => {\n    const [keys, entryValues] = Object.entries(item);\n    key = keys[0];\n    value = keys[1];\n  });\n  return key, value;\n}\n\nconsole.log(\"JSON::\" + getJsonData(JSON_DATA));\nexport default function WorksList({\n  match\n}) {\n  const path = match.path;\n  window.scrollTo(0, 0);\n  var categoryName = null;\n  var innerDataArray = null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      nav: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: JSON_DATA && JSON_DATA.map((item, idx) => {\n          // JSON 오브젝트 나누기\n          var a = 0;\n          const [keys, entryValues] = Object.entries(item);\n          const categoryName = keys[0];\n          const innerDataArray = keys[1];\n          a += 1;\n          return (\n            /*#__PURE__*/\n            // 카테고리 / 내부데이터 나눠서 생성\n            _jsxDEV(CategoryContainer, {\n              children: [/*#__PURE__*/_jsxDEV(CategoryTitleDiv, {\n                desc: categoryName\n              }, \"ct\" + idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), innerDataArray.map(element => {\n                return /*#__PURE__*/_jsxDEV(ItemCell, {\n                  path: path,\n                  alt: element.id,\n                  thumbImg: process.env.PUBLIC_URL + element.thumb_img,\n                  title: element.title,\n                  category: element.description\n                }, element.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, \"cc\" + idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = WorksList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CategoryContainer\");\n$RefreshReg$(_c2, \"WorksList\");","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/pages/WorksList.jsx"],"names":["React","Header","styled","CategoryTitleDiv","ItemCell","MainContainer","JSON_DATA","CategoryContainer","div","getJsonData","JSON","key","value","map","item","idx","keys","entryValues","Object","entries","console","log","WorksList","match","path","window","scrollTo","categoryName","innerDataArray","a","element","id","process","env","PUBLIC_URL","thumb_img","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,eAA9B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,eAAtB;;;AAEA,MAAMC,iBAAiB,GAAGL,MAAM,CAACM,GAAI;AACrC;AACA;AACA;AACA,CAJA;KAAMD,iB;;AAMN,SAASE,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIC,KAAK,GAAG,IAAZ;AAEAF,EAAAA,IAAI,CAACG,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,KAAe;AACtB,UAAM,CAACC,IAAD,EAAOC,WAAP,IAAsBC,MAAM,CAACC,OAAP,CAAeL,IAAf,CAA5B;AACAH,IAAAA,GAAG,GAAGK,IAAI,CAAC,CAAD,CAAV;AACAJ,IAAAA,KAAK,GAAGI,IAAI,CAAC,CAAD,CAAZ;AACD,GAJD;AAKA,SAAOL,GAAG,EAAEC,KAAZ;AACD;;AAEDQ,OAAO,CAACC,GAAR,CAAY,WAAWZ,WAAW,CAACH,SAAD,CAAlC;AAEA,eAAe,SAASgB,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAC3C,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,cAAc,GAAG,IAArB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,aAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACGtB,SAAS,IACRA,SAAS,CAACO,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC3B;AACA,cAAIc,CAAC,GAAG,CAAR;AACA,gBAAM,CAACb,IAAD,EAAOC,WAAP,IAAsBC,MAAM,CAACC,OAAP,CAAeL,IAAf,CAA5B;AACA,gBAAMa,YAAY,GAAGX,IAAI,CAAC,CAAD,CAAzB;AACA,gBAAMY,cAAc,GAAGZ,IAAI,CAAC,CAAD,CAA3B;AACAa,UAAAA,CAAC,IAAI,CAAL;AACA;AAAA;AACE;AACA,oBAAC,iBAAD;AAAA,sCACE,QAAC,gBAAD;AAAmC,gBAAA,IAAI,EAAEF;AAAzC,iBAAuB,OAAOZ,GAA9B;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGa,cAAc,CAACf,GAAf,CAAoBiB,OAAD,IAAa;AAC/B,oCACE,QAAC,QAAD;AAEE,kBAAA,IAAI,EAAEN,IAFR;AAGE,kBAAA,GAAG,EAAEM,OAAO,CAACC,EAHf;AAIE,kBAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBJ,OAAO,CAACK,SAJ7C;AAKE,kBAAA,KAAK,EAAEL,OAAO,CAACM,KALjB;AAME,kBAAA,QAAQ,EAAEN,OAAO,CAACO;AANpB,mBACOP,OAAO,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,wBADF;AAUD,eAXA,CAFH;AAAA,eAAwB,OAAOhB,GAA/B;AAAA;AAAA;AAAA;AAAA;AAFF;AAkBD,SAzBD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAqCD;MA3CuBO,S","sourcesContent":["import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport styled from \"styled-components\";\r\n\r\n//Import Components\r\nimport CategoryTitleDiv from \"../components/CategoryTitleDiv\";\r\nimport ItemCell from \"../components/ItemCell\";\r\n\r\n//Import Style\r\nimport { MainContainer } from \"./sharedStyle\";\r\n\r\n//Import JSON data\r\nimport JSON_DATA from \"../Data2.json\";\r\n\r\nconst CategoryContainer = styled.div`\r\n  float: left;\r\n  width: 100%;\r\n  margin-bottom: 5vh;\r\n`;\r\n\r\nfunction getJsonData(JSON) {\r\n  var key = null;\r\n  var value = null;\r\n\r\n  JSON.map((item, idx) => {\r\n    const [keys, entryValues] = Object.entries(item);\r\n    key = keys[0];\r\n    value = keys[1];\r\n  });\r\n  return key, value;\r\n}\r\n\r\nconsole.log(\"JSON::\" + getJsonData(JSON_DATA));\r\n\r\nexport default function WorksList({ match }) {\r\n  const path = match.path;\r\n  window.scrollTo(0, 0);\r\n  var categoryName = null;\r\n  var innerDataArray = null;\r\n\r\n  return (\r\n    <>\r\n      <Header nav=\"Works\" />\r\n\r\n      <MainContainer>\r\n        <div className=\"list\">\r\n          {JSON_DATA &&\r\n            JSON_DATA.map((item, idx) => {\r\n              // JSON 오브젝트 나누기\r\n              var a = 0;\r\n              const [keys, entryValues] = Object.entries(item);\r\n              const categoryName = keys[0];\r\n              const innerDataArray = keys[1];\r\n              a += 1;\r\n              return (\r\n                // 카테고리 / 내부데이터 나눠서 생성\r\n                <CategoryContainer key={\"cc\" + idx}>\r\n                  <CategoryTitleDiv key={\"ct\" + idx} desc={categoryName} />\r\n                  {innerDataArray.map((element) => {\r\n                    return (\r\n                      <ItemCell\r\n                        key={element.id}\r\n                        path={path}\r\n                        alt={element.id}\r\n                        thumbImg={process.env.PUBLIC_URL + element.thumb_img}\r\n                        title={element.title}\r\n                        category={element.description}\r\n                      />\r\n                    );\r\n                  })}\r\n                </CategoryContainer>\r\n              );\r\n            })}\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}