{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlvud\\\\Desktop\\\\react-web\\\\pyp\\\\src\\\\components\\\\DelayLink.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DelayLink(props) {\n  _s();\n\n  const {\n    delay,\n    onDelayStart,\n    onDelayEnd,\n    replace,\n    to,\n    ...rest\n  } = props;\n  let timeout = null;\n  let location = useLocation();\n  let navigate = useNavigate();\n  useEffect(() => {\n    // 언마운트시 타임아웃 정리\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  });\n\n  const handleClick = e => {\n    // location 인풋이 목적지와 같으면 반환\n    if ((location === null || location === void 0 ? void 0 : location.pathname) === to) return; // onDelayStart(e, to);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    e.preventDefault(); // delay만큼 대기\n\n    timeout = setTimeout(() => {\n      // to로 이동\n      if (replace) {\n        navigate(to, {\n          replace: true\n        });\n      } else {\n        navigate(to);\n      } // onDelayEnd(e, to);\n\n    }, delay);\n  };\n\n  DelayLink.defaultProps = {\n    replace: false,\n    delay: 0,\n    onDelayStart: () => {},\n    onDelayEnd: () => {}\n  };\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: to,\n    onClick: handleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n\n_s(DelayLink, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = DelayLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"DelayLink\");","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/src/components/DelayLink.jsx"],"names":["React","Link","useLocation","useNavigate","useEffect","DelayLink","props","delay","onDelayStart","onDelayEnd","replace","to","rest","timeout","location","navigate","clearTimeout","handleClick","e","pathname","defaultPrevented","preventDefault","setTimeout","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA,OAAnC;AAA4CC,IAAAA,EAA5C;AAAgD,OAAGC;AAAnD,MAA4DN,KAAlE;AACA,MAAIO,OAAO,GAAG,IAAd;AACA,MAAIC,QAAQ,GAAGZ,WAAW,EAA1B;AACA,MAAIa,QAAQ,GAAGZ,WAAW,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,WAAO,MAAM;AACX,UAAIS,OAAJ,EAAa;AACXG,QAAAA,YAAY,CAACH,OAAD,CAAZ;AACD;AACF,KAJD;AAKD,GAPQ,CAAT;;AASA,QAAMI,WAAW,GAAIC,CAAD,IAAO;AACzB;AACA,QAAI,CAAAJ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEK,QAAV,MAAuBR,EAA3B,EAA+B,OAFN,CAIzB;;AAEA,QAAIO,CAAC,CAACE,gBAAN,EAAwB;AACtB;AACD;;AAEDF,IAAAA,CAAC,CAACG,cAAF,GAVyB,CAYzB;;AACAR,IAAAA,OAAO,GAAGS,UAAU,CAAC,MAAM;AACzB;AACA,UAAIZ,OAAJ,EAAa;AACXK,QAAAA,QAAQ,CAACJ,EAAD,EAAK;AAAED,UAAAA,OAAO,EAAE;AAAX,SAAL,CAAR;AACD,OAFD,MAEO;AACLK,QAAAA,QAAQ,CAACJ,EAAD,CAAR;AACD,OANwB,CAOzB;;AACD,KARmB,EAQjBJ,KARiB,CAApB;AASD,GAtBD;;AAwBAF,EAAAA,SAAS,CAACkB,YAAV,GAAyB;AACvBb,IAAAA,OAAO,EAAE,KADc;AAEvBH,IAAAA,KAAK,EAAE,CAFgB;AAGvBC,IAAAA,YAAY,EAAE,MAAM,CAAE,CAHC;AAIvBC,IAAAA,UAAU,EAAE,MAAM,CAAE;AAJG,GAAzB;AAOA,sBAAO,QAAC,IAAD;AAAM,IAAA,EAAE,EAAEE,EAAV;AAAc,IAAA,OAAO,EAAEM;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA/CuBZ,S;UAGPH,W,EACAC,W;;;KAJOE,S","sourcesContent":["import React from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react/cjs/react.production.min\";\r\n\r\nexport default function DelayLink(props) {\r\n  const { delay, onDelayStart, onDelayEnd, replace, to, ...rest } = props;\r\n  let timeout = null;\r\n  let location = useLocation();\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // 언마운트시 타임아웃 정리\r\n    return () => {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n      }\r\n    };\r\n  });\r\n\r\n  const handleClick = (e) => {\r\n    // location 인풋이 목적지와 같으면 반환\r\n    if (location?.pathname === to) return;\r\n\r\n    // onDelayStart(e, to);\r\n\r\n    if (e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    // delay만큼 대기\r\n    timeout = setTimeout(() => {\r\n      // to로 이동\r\n      if (replace) {\r\n        navigate(to, { replace: true });\r\n      } else {\r\n        navigate(to);\r\n      }\r\n      // onDelayEnd(e, to);\r\n    }, delay);\r\n  };\r\n\r\n  DelayLink.defaultProps = {\r\n    replace: false,\r\n    delay: 0,\r\n    onDelayStart: () => {},\r\n    onDelayEnd: () => {},\r\n  };\r\n\r\n  return <Link to={to} onClick={handleClick} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}