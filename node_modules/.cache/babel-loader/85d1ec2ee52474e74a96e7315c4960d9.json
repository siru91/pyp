{"ast":null,"code":"'use strict';\n\nconst trimRepeated = require('trim-repeated');\n\nconst filenameReservedRegex = require('filename-reserved-regex');\n\nconst stripOuter = require('strip-outer'); // Doesn't make sense to have longer filenames\n\n\nconst MAX_FILENAME_LENGTH = 100;\nconst reControlChars = /[\\u0000-\\u001f\\u0080-\\u009f]/g; // eslint-disable-line no-control-regex\n\nconst reRelativePath = /^\\.+/;\nconst reTrailingPeriods = /\\.+$/;\n\nconst filenamify = (string, options = {}) => {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  const replacement = options.replacement === undefined ? '!' : options.replacement;\n\n  if (filenameReservedRegex().test(replacement) && reControlChars.test(replacement)) {\n    throw new Error('Replacement string cannot contain reserved filename characters');\n  }\n\n  string = string.replace(filenameReservedRegex(), replacement);\n  string = string.replace(reControlChars, replacement);\n  string = string.replace(reRelativePath, replacement);\n  string = string.replace(reTrailingPeriods, '');\n\n  if (replacement.length > 0) {\n    string = trimRepeated(string, replacement);\n    string = string.length > 1 ? stripOuter(string, replacement) : string;\n  }\n\n  string = filenameReservedRegex.windowsNames().test(string) ? string + replacement : string;\n  string = string.slice(0, typeof options.maxLength === 'number' ? options.maxLength : MAX_FILENAME_LENGTH);\n  return string;\n};\n\nmodule.exports = filenamify;","map":{"version":3,"sources":["C:/Users/tlvud/Desktop/react-web/pyp/node_modules/filenamify/filenamify.js"],"names":["trimRepeated","require","filenameReservedRegex","stripOuter","MAX_FILENAME_LENGTH","reControlChars","reRelativePath","reTrailingPeriods","filenamify","string","options","TypeError","replacement","undefined","test","Error","replace","length","windowsNames","slice","maxLength","module","exports"],"mappings":"AAAA;;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,yBAAD,CAArC;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B,C,CAEA;;;AACA,MAAMG,mBAAmB,GAAG,GAA5B;AAEA,MAAMC,cAAc,GAAG,+BAAvB,C,CAAwD;;AACxD,MAAMC,cAAc,GAAG,MAAvB;AACA,MAAMC,iBAAiB,GAAG,MAA1B;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,OAAO,GAAG,EAAnB,KAA0B;AAC5C,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC/B,UAAM,IAAIE,SAAJ,CAAc,mBAAd,CAAN;AACA;;AAED,QAAMC,WAAW,GAAGF,OAAO,CAACE,WAAR,KAAwBC,SAAxB,GAAoC,GAApC,GAA0CH,OAAO,CAACE,WAAtE;;AAEA,MAAIV,qBAAqB,GAAGY,IAAxB,CAA6BF,WAA7B,KAA6CP,cAAc,CAACS,IAAf,CAAoBF,WAApB,CAAjD,EAAmF;AAClF,UAAM,IAAIG,KAAJ,CAAU,gEAAV,CAAN;AACA;;AAEDN,EAAAA,MAAM,GAAGA,MAAM,CAACO,OAAP,CAAed,qBAAqB,EAApC,EAAwCU,WAAxC,CAAT;AACAH,EAAAA,MAAM,GAAGA,MAAM,CAACO,OAAP,CAAeX,cAAf,EAA+BO,WAA/B,CAAT;AACAH,EAAAA,MAAM,GAAGA,MAAM,CAACO,OAAP,CAAeV,cAAf,EAA+BM,WAA/B,CAAT;AACAH,EAAAA,MAAM,GAAGA,MAAM,CAACO,OAAP,CAAeT,iBAAf,EAAkC,EAAlC,CAAT;;AAEA,MAAIK,WAAW,CAACK,MAAZ,GAAqB,CAAzB,EAA4B;AAC3BR,IAAAA,MAAM,GAAGT,YAAY,CAACS,MAAD,EAASG,WAAT,CAArB;AACAH,IAAAA,MAAM,GAAGA,MAAM,CAACQ,MAAP,GAAgB,CAAhB,GAAoBd,UAAU,CAACM,MAAD,EAASG,WAAT,CAA9B,GAAsDH,MAA/D;AACA;;AAEDA,EAAAA,MAAM,GAAGP,qBAAqB,CAACgB,YAAtB,GAAqCJ,IAArC,CAA0CL,MAA1C,IAAoDA,MAAM,GAAGG,WAA7D,GAA2EH,MAApF;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAACU,KAAP,CAAa,CAAb,EAAgB,OAAOT,OAAO,CAACU,SAAf,KAA6B,QAA7B,GAAwCV,OAAO,CAACU,SAAhD,GAA4DhB,mBAA5E,CAAT;AAEA,SAAOK,MAAP;AACA,CAzBD;;AA2BAY,MAAM,CAACC,OAAP,GAAiBd,UAAjB","sourcesContent":["'use strict';\nconst trimRepeated = require('trim-repeated');\nconst filenameReservedRegex = require('filename-reserved-regex');\nconst stripOuter = require('strip-outer');\n\n// Doesn't make sense to have longer filenames\nconst MAX_FILENAME_LENGTH = 100;\n\nconst reControlChars = /[\\u0000-\\u001f\\u0080-\\u009f]/g; // eslint-disable-line no-control-regex\nconst reRelativePath = /^\\.+/;\nconst reTrailingPeriods = /\\.+$/;\n\nconst filenamify = (string, options = {}) => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tconst replacement = options.replacement === undefined ? '!' : options.replacement;\n\n\tif (filenameReservedRegex().test(replacement) && reControlChars.test(replacement)) {\n\t\tthrow new Error('Replacement string cannot contain reserved filename characters');\n\t}\n\n\tstring = string.replace(filenameReservedRegex(), replacement);\n\tstring = string.replace(reControlChars, replacement);\n\tstring = string.replace(reRelativePath, replacement);\n\tstring = string.replace(reTrailingPeriods, '');\n\n\tif (replacement.length > 0) {\n\t\tstring = trimRepeated(string, replacement);\n\t\tstring = string.length > 1 ? stripOuter(string, replacement) : string;\n\t}\n\n\tstring = filenameReservedRegex.windowsNames().test(string) ? string + replacement : string;\n\tstring = string.slice(0, typeof options.maxLength === 'number' ? options.maxLength : MAX_FILENAME_LENGTH);\n\n\treturn string;\n};\n\nmodule.exports = filenamify;\n"]},"metadata":{},"sourceType":"script"}