[{"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\index.js":"1","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\reportWebVitals.js":"2","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\client\\Root.jsx":"3","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\shared\\App.jsx":"4","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\index.js":"5","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Welcome.jsx":"6","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works.jsx":"7","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\Header.jsx":"8","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\ItemCell.jsx":"9","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\sharedStyle.js":"10","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\CategoryTitleDiv.jsx":"11","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\IntroHolder.jsx":"12","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Coc2016.jsx":"13","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\ContributionChart.jsx":"14","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Yng.jsx":"15","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Viaf2021.jsx":"16","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\Button.jsx":"17","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Doh.jsx":"18","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Heartfit.jsx":"19","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Gutsy.jsx":"20","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\NotFound.jsx":"21","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Loading.jsx":"22","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\index.js":"23","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\Footer.jsx":"24","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\CustomHooks.jsx":"25","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Cardivu.jsx":"26","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\DelayLink.jsx":"27"},{"size":518,"mtime":1647236999840,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1630342066826,"results":"30","hashOfConfig":"31"},{"size":233,"mtime":1646925959649,"results":"32","hashOfConfig":"29"},{"size":4667,"mtime":1648512808193,"results":"33","hashOfConfig":"29"},{"size":721,"mtime":1646964442698,"results":"34","hashOfConfig":"29"},{"size":15031,"mtime":1681725449720,"results":"35","hashOfConfig":"29"},{"size":2553,"mtime":1648188799184,"results":"36","hashOfConfig":"29"},{"size":3025,"mtime":1681725751825,"results":"37","hashOfConfig":"29"},{"size":2663,"mtime":1648188953558,"results":"38","hashOfConfig":"29"},{"size":9782,"mtime":1648110898172,"results":"39","hashOfConfig":"29"},{"size":852,"mtime":1636599007346,"results":"40","hashOfConfig":"41"},{"size":2901,"mtime":1645432931978,"results":"42","hashOfConfig":"29"},{"size":11357,"mtime":1647230240031,"results":"43","hashOfConfig":"29"},{"size":3524,"mtime":1638235771698,"results":"44","hashOfConfig":"29"},{"size":6319,"mtime":1646975487672,"results":"45","hashOfConfig":"29"},{"size":10966,"mtime":1681724087866,"results":"46","hashOfConfig":"29"},{"size":634,"mtime":1639019365457,"results":"47","hashOfConfig":"29"},{"size":7688,"mtime":1646975573796,"results":"48","hashOfConfig":"29"},{"size":6892,"mtime":1638774645460,"results":"49","hashOfConfig":"29"},{"size":6848,"mtime":1646975611409,"results":"50","hashOfConfig":"29"},{"size":323,"mtime":1637915929052,"results":"51","hashOfConfig":"29"},{"size":139,"mtime":1637915887151,"results":"52","hashOfConfig":"29"},{"size":322,"mtime":1638771347665,"results":"53","hashOfConfig":"29"},{"size":493,"mtime":1638768128342,"results":"54","hashOfConfig":"29"},{"size":596,"mtime":1647263450017,"results":"55","hashOfConfig":"29"},{"size":6133,"mtime":1646975178830,"results":"56","hashOfConfig":"29"},{"size":1275,"mtime":1648104529519,"results":"57","hashOfConfig":"29"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1601nb0",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"18b63of",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1ez3n3n",{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"118","usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"61"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"61"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"61"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"61"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\index.js",[],[],["156","157"],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\reportWebVitals.js",[],["158","159"],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\client\\Root.jsx",[],[],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\shared\\App.jsx",["160","161","162","163","164","165","166","167","168","169","170","171","172","173"],[],"import React, { useState, useEffect, Suspense, lazy } from \"react\";\r\nimport {\r\n  Outlet,\r\n  Route,\r\n  Routes,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport {\r\n  SwitchTransition,\r\n  TransitionGroup,\r\n  CSSTransition,\r\n} from \"react-transition-group\";\r\nimport styled from \"styled-components\";\r\n\r\nimport JSON_DATA from \"../Data3.json\";\r\nimport { Header } from \"../components\";\r\nimport { MainContainer, LoadingPage } from \"../pages/sharedStyle\";\r\nimport { ItemCell } from \"../components\";\r\n\r\n//Import pages\r\nimport {\r\n  Welcome,\r\n  // Works,\r\n  notFound,\r\n  coc2016,\r\n  yng,\r\n  viaf,\r\n  doh,\r\n  gutsy,\r\n  cardivu,\r\n  heartfit,\r\n} from \"../pages\";\r\nimport { GlobalStyle } from \"../pages/sharedStyle\";\r\nimport \"./App.css\";\r\n\r\n// React lazy loading components\r\nconst LazyWorks = lazy(() => import(\"../pages/Works\"));\r\nconst LazyAbout = lazy(() => import(\"../pages/Welcome\"));\r\n\r\n//styled components\r\nconst FadeContainer = styled.div`\r\n  &.fadeIn {\r\n    animation: 0.5s fadeIn forwards;\r\n  }\r\n\r\n  &.fadeOut {\r\n    animation: 0.5s fadeOut forwards;\r\n  }\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n      transform: translate(-20px, 0);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translate(0px, 0px);\r\n    }\r\n  }\r\n\r\n  @keyframes fadeOut {\r\n    from {\r\n      opacity: 1;\r\n      transform: translate(0px, 0px);\r\n    }\r\n    to {\r\n      transform: translate(-20px, 0);\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  const location = useLocation();\r\n  const [displayLocation, setDisplayLocation] = useState(location);\r\n  // const [transitionStage, setTransitionStage] = useState(\"fadeIn\");\r\n\r\n  const [transitionTrigger, setTransitionTrigger] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransitionTrigger(false);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location != displayLocation) setTransitionTrigger(true);\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <LoadingPage\r\n        className={transitionTrigger ? \"transitionStart\" : \"transitionEnd\"}\r\n        onAnimationEnd={() => {\r\n          setDisplayLocation(location);\r\n          if (transitionTrigger === true) {\r\n            setTimeout(() => {\r\n              setTransitionTrigger(false);\r\n            }, 1500);\r\n          }\r\n        }}\r\n      />\r\n\r\n      <GlobalStyle />\r\n      <Suspense fallback={<div>Loading!!</div>}>\r\n        <Routes location={displayLocation}>\r\n          <Route path=\"\" element={<LazyAbout />} />\r\n          <Route path=\"works/*\" element={<LazyWorks />} />\r\n          {/* <Route path=\"\" element={<Welcome />} /> */}\r\n          {/* <Route path=\"works/*\" element={<WorksList />} /> */}\r\n          <Route path=\"works/:contentsId\" element={<ContentsLoader />} />\r\n        </Routes>\r\n      </Suspense>\r\n      {/* <AnimatePresence exitBeforeEnter>\r\n      </AnimatePresence> */}\r\n    </>\r\n  );\r\n};\r\n\r\n// function WorksList() {\r\n//   const [isLoading, setLoading] = useState(true);\r\n\r\n//   //스크롤을 맨 위로\r\n//   useEffect(() => {\r\n//     window.scrollTo(0, 0);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     setLoading(false);\r\n//   }, [isLoading]);\r\n\r\n//   return (\r\n//     <>\r\n//       {/** Suspense를 써서 껍데기 만들어보기 */}\r\n//       <Header nav=\"WORKS\" />\r\n\r\n//       <MainContainer paddingToTop={\"10rem\"}>\r\n//         <div className=\"itemList\">\r\n//           {/* <div className={`itemList ${isShow ? \"show\" : \"hide\"}`}> */}\r\n//           {JSON_DATA &&\r\n//             JSON_DATA.map((item) => {\r\n//               return (\r\n//                 <ItemCell\r\n//                   isConstruction={item.title.includes(\"공사중\")}\r\n//                   key={item.id}\r\n//                   alt={item.id}\r\n//                   thumbImg={process.env.PUBLIC_URL + item.thumb_img}\r\n//                   title={item.title}\r\n//                   subtitle={item.subtitle}\r\n//                 />\r\n//               );\r\n//             })}\r\n//         </div>\r\n//       </MainContainer>\r\n//     </>\r\n//   );\r\n// }\r\n\r\nfunction ContentsLoader() {\r\n  let { contentsId } = useParams();\r\n  console.log(\"ID: \" + contentsId);\r\n\r\n  switch (contentsId) {\r\n    case \"coc2016\":\r\n      return coc2016();\r\n\r\n    case \"yng\":\r\n      return yng();\r\n\r\n    case \"viaf2021\":\r\n      return viaf();\r\n\r\n    case \"gutsy\":\r\n      return gutsy();\r\n\r\n    case \"heartfit\":\r\n      return heartfit();\r\n\r\n    case \"doh\":\r\n      return doh();\r\n\r\n    case \"cardivu\":\r\n      return cardivu();\r\n\r\n    default:\r\n      //return 404;\r\n      return (\r\n        <main style={{ padding: \"1rem\" }}>\r\n          <p>There's nothing here!</p>\r\n        </main>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\index.js",[],[],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Welcome.jsx",["174","175","176"],[],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works.jsx",["177","178","179","180","181","182","183","184","185","186","187","188"],[],"import { Suspense, lazy, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Route, Routes, useParams, useLocation } from \"react-router-dom\";\r\nimport { LoadingPage, MainContainer } from \"./sharedStyle\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nimport Header from \"../components/Header\";\r\n\r\n//Import Components\r\nimport ItemCell from \"../components/ItemCell\";\r\n//Import pages\r\nimport {\r\n  notFound,\r\n  coc2016,\r\n  yng,\r\n  viaf,\r\n  doh,\r\n  gutsy,\r\n  cardivu,\r\n  heartfit,\r\n} from \"../pages\";\r\n\r\n//Import JSON data\r\nimport JSON_DATA from \"../Data3.json\";\r\n\r\nexport default function WorksList() {\r\n  const [transitionTrigger, setTransitionTrigger] = useState(false);\r\n\r\n  //스크롤을 맨 위로\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    // setTimeout(() => {\r\n    //   setTransitionTrigger(false);\r\n    // }, 500);\r\n    return () => {\r\n      setTransitionTrigger(false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* <LoadingPage\r\n        className={transitionTrigger ? \"transitionStart\" : \"transitionEnd\"}\r\n        // isLoading={transitionTrigger}\r\n      ></LoadingPage> */}\r\n\r\n      <Header nav=\"WORKS\" />\r\n\r\n      <MainContainer className=\"main_cont\" paddingToTop={\"10rem\"}>\r\n        <div className=\"itemList\">\r\n          {JSON_DATA &&\r\n            JSON_DATA.map((item) => {\r\n              return (\r\n                <ItemCell\r\n                  isConstruction={item.title.includes(\"공사중\")}\r\n                  delay={0}\r\n                  key={item.id}\r\n                  alt={item.id}\r\n                  to={item.id}\r\n                  delayControl={setTransitionTrigger}\r\n                  thumbImg={process.env.PUBLIC_URL + item.thumb_img}\r\n                  title={item.title}\r\n                  subtitle={item.subtitle}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ContentsLoader() {\r\n  let { contentsId } = useParams();\r\n  console.log(\"ID: \" + contentsId);\r\n\r\n  switch (contentsId) {\r\n    case \"coc2016\":\r\n      return coc2016();\r\n\r\n    case \"yng\":\r\n      return yng();\r\n\r\n    case \"viaf2021\":\r\n      return viaf();\r\n\r\n    case \"gutsy\":\r\n      return gutsy();\r\n\r\n    case \"heartfit\":\r\n      return heartfit();\r\n\r\n    case \"doh\":\r\n      return doh();\r\n\r\n    case \"cardivu\":\r\n      return cardivu();\r\n\r\n    default:\r\n      //return 404;\r\n      return (\r\n        <main style={{ padding: \"1rem\" }}>\r\n          <p>There's nothing here!</p>\r\n        </main>\r\n      );\r\n  }\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\Header.jsx",["189"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderLink = styled(Link)``;\r\n\r\nconst HeaderHolder = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 6.5rem;\r\n  padding: 3vh 5%;\r\n  font-size: 2rem;\r\n\r\n  left: 0;\r\n  top: 0;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  box-sizing: border-box;\r\n\r\n  background-color: #f9f9f9;\r\n  backdrop-filter: blur(5px);\r\n  transition: 0.2s;\r\n  z-index: 5;\r\n\r\n  ${HeaderLink} {\r\n    & > .headerTitle {\r\n      display: inline-block;\r\n      padding-left: 5%;\r\n      height: 100%;\r\n\r\n      & > .st0 {\r\n        stroke: black;\r\n        stroke-width: 3px;\r\n        fill: none;\r\n      }\r\n    }\r\n\r\n    & > .headerText {\r\n      padding-right: 5%;\r\n      display: inline-block;\r\n      color: #272727;\r\n\r\n      @media screen and (max-width: 1080px) {\r\n        max-width: 80%;\r\n        padding-left: 5%;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.isScrolled {\r\n    height: 4.5rem;\r\n    font-size: 1.7rem;\r\n    padding: 1.5vh 5%;\r\n    font-weight: 700;\r\n    background-color: #f9f9f9b0;\r\n\r\n    & > ${HeaderLink} {\r\n      & > .headerTitle {\r\n        & > .st0 {\r\n          fill: #272727;\r\n          stroke: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Header(props) {\r\n  const [active, setActive] = useState(true);\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n\r\n  const onScroll = () => {\r\n    if (window.scrollY > 50) {\r\n      setScrollActive(true);\r\n    } else {\r\n      setScrollActive(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setActive(true);\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return function cleanup() {\r\n      setActive(false);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {active ? (\r\n        <HeaderHolder className={isScrolled ? \"isScrolled\" : \"\"}>\r\n          <HeaderLink to=\"..\" id=\"Home\">\r\n            <svg\r\n              className=\"headerTitle\"\r\n              version=\"1.1\"\r\n              id=\"Layer_1\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              x=\"0px\"\r\n              y=\"0px\"\r\n              viewBox=\"0 20 125 80\"\r\n            >\r\n              <rect x=\"5.5\" y=\"33.17\" className=\"st0\" width=\"15\" height=\"60\" />\r\n              <rect\r\n                x=\"105.5\"\r\n                y=\"33.17\"\r\n                className=\"st0\"\r\n                width=\"15\"\r\n                height=\"60\"\r\n              />\r\n              <circle className=\"st0\" cx=\"42.06\" cy=\"52.23\" r=\"19.06\" />\r\n              <polygon\r\n                className=\"st0\"\r\n                points=\"78.4,34.07 65.45,34.07 65.44,34.08 65.44,47.05 89.68,71.29 102.64,71.29 102.65,71.28 102.65,58.32 \r\n\t\"\r\n              />\r\n            </svg>\r\n          </HeaderLink>\r\n          <HeaderLink\r\n            to=\"/works\"\r\n            id=\"works\"\r\n            // className={isScrolled ? \"isScrolled\" : \"\"}\r\n          >\r\n            <div className=\"headerText\">{props.nav}</div>\r\n          </HeaderLink>\r\n        </HeaderHolder>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\ItemCell.jsx",["190","191","192","193","194","195","196","197"],[],"import React from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react/cjs/react.production.min\";\r\nimport styled from \"styled-components\";\r\n\r\nimport DelayLink from \"./DelayLink\";\r\n\r\nconst ItemCells = styled(Link)`\r\n  position: relative;\r\n  float: left;\r\n  width: 50%;\r\n  display: block;\r\n  margin-bottom: 8vh;\r\n  padding-left: 1.5%;\r\n  padding-right: 1.5%;\r\n  box-sizing: border-box;\r\n  filter: grayscale(100%);\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  transition: 0.5s;\r\n\r\n  &.underConstruction {\r\n    pointer-events: none;\r\n  }\r\n\r\n  & > strong {\r\n    font-size: 2.3rem;\r\n    font-weight: 700;\r\n  }\r\n\r\n  & > em {\r\n    font-size: 1.3rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &:hover {\r\n    filter: grayscale(0%);\r\n  }\r\n\r\n  & > .panel {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    background-color: black;\r\n  }\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    filter: none;\r\n\r\n    width: 100%;\r\n    padding-left: 3%;\r\n    padding-right: 3%;\r\n\r\n    & > strong {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ThumbImg = styled.img`\r\n  border: 2px solid black;\r\n  width: 100%;\r\n`;\r\n\r\nexport default function ItemCell(props) {\r\n  const { delay, delayControl, replace, to } = props;\r\n  let timeout = null;\r\n  let location = useLocation();\r\n  let navigate = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   // 언마운트시 타임아웃 정리\r\n  //   return () => {\r\n  //     if (timeout) {\r\n  //       clearTimeout(timeout);\r\n  //     }\r\n  //   };\r\n  // });\r\n\r\n  // const handleClick = (e) => {\r\n  //   // location 인풋이 목적지와 같으면 반환\r\n  //   if (location?.pathname === to) return;\r\n\r\n  //   delayControl(true);\r\n\r\n  //   if (e.defaultPrevented) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   e.preventDefault();\r\n\r\n  //   // delay만큼 대기\r\n  //   timeout = setTimeout(() => {\r\n  //     // to로 이동\r\n  //     if (replace) {\r\n  //       navigate(to, { replace: true });\r\n  //     } else {\r\n  //       navigate(to);\r\n  //     }\r\n  //     delayControl(false);\r\n  //   }, delay);\r\n  // };\r\n\r\n  DelayLink.defaultProps = {\r\n    replace: false,\r\n    delay: 0,\r\n    onDelayStart: () => {},\r\n    onDelayEnd: () => {},\r\n  };\r\n\r\n  return (\r\n    <ItemCells\r\n      className={props.isConstruction ? \"underConstruction\" : \"\"}\r\n      to={`${props.alt}`}\r\n      // onClick={handleClick}\r\n    >\r\n      <ThumbImg alt={props.alt} src={props.thumbImg} />\r\n      <strong>{props.title}</strong> <br />\r\n      <em>{props.subtitle}</em>\r\n    </ItemCells>\r\n  );\r\n}\r\n\r\nItemCell.defaultProps = {\r\n  delay: 0,\r\n  replace: false,\r\n  onDelayStart: () => {},\r\n  onDelayEnd: () => {},\r\n};\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\sharedStyle.js",[],[],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\CategoryTitleDiv.jsx",[],["198","199"],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\IntroHolder.jsx",["200","201","202","203","204"],[],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Intro__Item = styled.div`\r\n  font-size: 1.3rem;\r\n  grid-column: span 1;\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-column: span 3;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst IntroItemHolder = styled.div`\r\n  width: auto;\r\n  max-width: 45rem;\r\n  padding-top: 15rem;\r\n  padding-bottom: 15rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  /* grid-template-rows: repeat(2, auto); */\r\n  column-gap: 2rem;\r\n  row-gap: 3rem;\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    padding-top: 9rem;\r\n    padding-bottom: 3rem;\r\n\r\n    margin-left: 3%;\r\n    margin-right: 3%;\r\n  }\r\n  & > .bg {\r\n    width: 80vw;\r\n    height: 53vh;\r\n    box-sizing: content-box;\r\n    position: absolute;\r\n    left: -1%;\r\n    top: 11.5rem;\r\n    border: #262626 solid 2.5px;\r\n    z-index: 5;\r\n\r\n    @media screen and (max-width: 1200px) {\r\n      width: 0%;\r\n      visibility: collapse;\r\n    }\r\n\r\n    @media screen and (max-height: 800px) {\r\n      height: 70vh;\r\n    }\r\n\r\n    @media screen and (max-height: 600px) {\r\n      width: 0%;\r\n      visibility: collapse;\r\n    }\r\n  }\r\n\r\n  & > .title {\r\n    grid-column: span 3;\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    margin-bottom: 1rem;\r\n    @media screen and (max-width: 1080px) {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n\r\n  ${Intro__Item} {\r\n    & > .head {\r\n      font-weight: 600;\r\n    }\r\n    & > .bar {\r\n      margin: 0.7rem auto;\r\n      width: auto;\r\n      height: 4px;\r\n      background-color: #333;\r\n\r\n      @media screen and (max-width: 1080px) {\r\n        height: 1px;\r\n        background-color: #5555;\r\n      }\r\n    }\r\n    & > .desc {\r\n      color: #666666;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function IntroHolder(props) {\r\n  return (\r\n    <IntroItemHolder>\r\n      <div className=\"bg\" />\r\n      <div className=\"title\">{props.title}</div>\r\n      <Intro__Item>\r\n        <div className=\"head\">주관</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.client}</div>\r\n      </Intro__Item>\r\n      <Intro__Item>\r\n        <div className=\"head\">작업 기간</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.period}</div>\r\n      </Intro__Item>\r\n      <Intro__Item>\r\n        <div className=\"head\">작업 분류</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.subtitle}</div>\r\n      </Intro__Item>\r\n      <Intro__Item>\r\n        <div className=\"head\">인원 구성</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.team}</div>\r\n      </Intro__Item>\r\n      <Intro__Item>\r\n        <div className=\"head\">결과물</div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"desc\">{props.results}</div>\r\n      </Intro__Item>\r\n    </IntroItemHolder>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Coc2016.jsx",["205","206","207","208","209"],[],"import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport { Header, IntroHolder, ContributionChart } from \"../../components\";\r\n\r\nexport default function Coc2016() {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = useParams().contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer>\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">Creative Open Campus</div>\r\n          <div className=\"02\">2016</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"14%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">다양한 경험이 가능했던 융합 프로젝트</div>\r\n                {/* <div className=\"bar_end\" /> */}\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  창의+융합형 인재 육성을 위해 다학계 분야 연구원들이 모인\r\n                  개방형 캠퍼스 프로젝트입니다.\r\n                  <br />\r\n                  Unity3D를 이용하여 가상 환경을 생성하여 빔프로젝터를 이용해\r\n                  공간에 투사한 뒤, 가상 환경을 제어할 수 있는 테이블을\r\n                  제작하였습니다.\r\n                  <br />\r\n                  가상 환경은 외부 데이터를 종합적으로 이용해 공간을 사용자의\r\n                  감성 상태에 따라 변경해줍니다.\r\n                  <br />\r\n                  <br />\r\n                  전체 내용 기획을 시작으로, 공간에 영상을 투사할 다수의\r\n                  프로젝터 제어, UX를 고려한 인터페이스 구성 및 소스 제작,\r\n                  Unity3D를 이용한 환경 개발, 테이블과 함께 사용한 외부\r\n                  하드웨어들에서 들어오는 데이터를 이용한 환경 제어 등을 맡아서\r\n                  진행하였습니다.\r\n                </div>\r\n              </div>\r\n              {/* COC 가이드 비디오 */}\r\n              <video muted controls className=\"items\" src={videoUrls[1]} />\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">Unity3D를 이용한 실시간 환경 구성</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  실시간으로 변화하는 환경을 구성하기 위해 Unity3D를\r\n                  이용하였습니다.\r\n                  <br />\r\n                  환경은 사용자의 감성 데이터와 표정, 동작등을 인식하고 종합하여\r\n                  감성 증강을 위해 변화합니다.\r\n                  <br />\r\n                  <br />\r\n                  유니티는 외부 하드웨어들에서 데이터를 받아 통합하는데도 사용\r\n                  되었습니다.\r\n                  <br />\r\n                  외부 하드웨어로 키넥트, 웹캠, 뇌파장비, 아두이노 심박 센서를\r\n                  사용했으며 데이터들은 유니티를 거쳐 가상 공간에\r\n                  반영되었습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[10]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"3 / 8 span\"}\r\n              objPos=\"0% 0\"\r\n            />\r\n            <ss.Holder__video\r\n              className=\"holder__video\"\r\n              autoPlay\r\n              muted\r\n              loop\r\n              controls={false}\r\n              src={videoUrls[0]}\r\n              column={\"2 / 10 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"2 / 5 span\"}\r\n              objPos=\"0% 0\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[1]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"7 / 5 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              alt=\"img01\"\r\n              column={\"2 / 10 span\"}\r\n              objPos=\"0% 0\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">터치 테이블 형태의 사용자 인터페이스</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  대형 테이블에 터치 기능을 구현했기 때문에, 사용자의 손이 닿는\r\n                  테이블 하단에 메인 인터페이스를 구성했습니다. 테이블 상단은\r\n                  현재 감성상태 등을 확인할 수 있는 대시보드로 사용했습니다.\r\n                  <br />\r\n                  감성과 표정, 동작인식등 다양한 인식 기능이 인지적 피로를\r\n                  유발할 수 있다고 판단하였기에 인터페이스는 최대한 간결하게\r\n                  제작했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[6]}\r\n              className=\"holder__image\"\r\n              column={\"2 / 5 span\"}\r\n              alt=\"img01\"\r\n              objPos=\"0% 0\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[5]}\r\n              className=\"holder__image\"\r\n              column={\"7 / 5 span\"}\r\n              alt=\"img02\"\r\n              objPos=\"90% 0\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 관련 결과물 제작</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  프로젝트의 결과물로 책자를 제작/배포하여 결과보고에서 좋은\r\n                  점수를 받았습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[7]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"2 / span 10\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[8]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"2 / span 5\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[9]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"7 / span 5\"}\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  이 프로젝트를 진행하며 프로그래밍 능력을 많이 발전시킬 수\r\n                  있었습니다.\r\n                  <br />\r\n                  유니티 플랫폼과 키넥트 등으로 이루어진 센서들을 통합해서\r\n                  사용해야 했기 때문에 데이터의 플로우와 절차등에 대해 심도있게\r\n                  고민할 수 있었습니다.\r\n                  <br />\r\n                  처음으로 해본 마감일이 정해져있던 프로젝트여서\r\n                  (반강제로)성장할 수 있었습니다. 기획부터 런칭까지, 프로젝트의\r\n                  모든 프로세스를 모두 함께 참여했기 때문에 기존 디자이너\r\n                  포지션에선 알기 힘들었던 다양한 부분들을 알게 되었습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\ContributionChart.jsx",["210"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// export const TechContainer = styled.div`\r\n//   z-index: 2;\r\n//   background-color: #b7b7b740;\r\n//   backdrop-filter: blur(5px);\r\n//   padding: 5rem 15% 7rem 15%;\r\n\r\n//   @media screen and (max-width: 1080px) {\r\n//     padding: 5rem 1% 7rem 1%;\r\n//   }\r\n// `;\r\n\r\n// export const TechHolder = styled.div`\r\n//   width: auto;\r\n//   margin: auto;\r\n//   display: grid;\r\n//   grid-template-columns: repeat(2, auto);\r\n//   grid-template-rows: repeat(3, auto);\r\n\r\n//   grid-auto-flow: row dense;\r\n//   row-gap: 5rem;\r\n\r\n//   @media screen and (max-width: 1080px) {\r\n//   }\r\n//   & > .techHolder__title {\r\n//     font-size: 1.6em;\r\n//     font-weight: 600;\r\n//     margin-bottom: 1rem;\r\n//     text-align: center;\r\n\r\n//     grid-column-start: 1;\r\n//     grid-column-end: 3;\r\n//     grid-row-start: 1;\r\n//     grid-row-end: 2;\r\n//   }\r\n\r\n//   /* & > .techHolder__desc {\r\n//     position: absolute;\r\n//     text-align: center;\r\n//     left: 50%;\r\n//     top: 50%;\r\n//   } */\r\n\r\n//   & > .techHolder__chart {\r\n//     grid-row-start: 2;\r\n//     grid-row-end: 3;\r\n//   }\r\n// `;\r\n\r\nconst Chart = styled.svg`\r\n  height: 45vh;\r\n  width: auto;\r\n  justify-content: center;\r\n\r\n  &.techHolder__chart {\r\n    fill: none;\r\n    stroke: #4cc790;\r\n    stroke-linecap: round;\r\n    stroke-width: 1.8;\r\n    stroke-dasharray: ${(props) => props.percent || 0} 100;\r\n    stroke-dashoffset: -200;\r\n  }\r\n\r\n  & > .techHolder__chartbase {\r\n    fill: none;\r\n    stroke: #ddd;\r\n    stroke-width: 1.8;\r\n    stroke-dasharray: 0;\r\n  }\r\n  @media screen and (max-width: 700px) {\r\n    height: 30vh;\r\n  }\r\n`;\r\n\r\nconst ChartDesc = styled.div`\r\n  min-width: 100%;\r\n  position: absolute;\r\n  text-align: center;\r\n  left: 50%;\r\n  top: 45%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  & > .job_name {\r\n    font-size: 1.4rem;\r\n    line-height: 300%;\r\n  }\r\n`;\r\n\r\nexport default function ContributionChart(props) {\r\n  const [isSolo, setSolo] = useState(true);\r\n  useEffect(() => {\r\n    if (props.withTeam.length === 0) {\r\n      setSolo(true);\r\n    } else {\r\n      setSolo(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"ChartContainer\"\r\n      style={{ margin: \"auto\", position: \"relative\" }}\r\n    >\r\n      <Chart\r\n        className=\"techHolder__chart\"\r\n        percent={props.percent}\r\n        viewBox=\"0 0 36 36\"\r\n      >\r\n        <path\r\n          className=\"techHolder__chartbase\"\r\n          d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n        />\r\n        <path\r\n          d=\"M18 2.0845\r\n            a 15.9155 15.9155 0 0 1 0 31.831\r\n            a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n        />\r\n      </Chart>\r\n      <ChartDesc className=\"techHolder__desc\">\r\n        <strong className=\"job_name\">{props.jobName}</strong>\r\n        <br />\r\n\r\n        <strong>MY JOB</strong>\r\n        <br />\r\n        {props.myJob.map((item, idx) => {\r\n          return (\r\n            <span key={\"myjob\" + idx}>\r\n              {item}\r\n              <br />\r\n            </span>\r\n          );\r\n        })}\r\n        <br />\r\n        {isSolo || (\r\n          <div>\r\n            <strong>WITH TEAM</strong>\r\n            <br />\r\n            {props.withTeam.map((item, idx) => {\r\n              return (\r\n                <span key={\"w/team\" + idx}>\r\n                  {item}\r\n                  <br />\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </ChartDesc>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Yng.jsx",["211","212","213","214","215","216"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\n\r\nexport default function Yng() {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = useParams().contentsId;\r\n  const navi = useNavigate();\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"black\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">연애능력고사</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"23%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">얼굴 인식으로 알아보는 연애능력</div>\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  간단한 심리검사와 표정 짓기, 표정 알아맞추기 능력을 연애능력\r\n                  점수로 환산해줍니다.\r\n                  <br />\r\n                  (진짜로 연애능력과 연결되지는 않습니다)\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">연애의 색을 컨셉으로 제작</div>\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  사랑스러운 이미지를 위해 분홍색을 주색으로 설정하여\r\n                  진행했습니다.\r\n                  <br />\r\n                  주어진 작업 수행시간이 짧았기 때문에 각 단계마다 안내 영상을\r\n                  제작하여 작업 수행능력을 향상시켰습니다.\r\n                  <br />\r\n                  XML을 이용하여 Windows용 어플리케이션 UI를 제작했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n          <ss.ImageHolder height={\"30%\"}>\r\n            <ss.Holder__video\r\n              className=\"holder__video\"\r\n              autoPlay\r\n              muted\r\n              loop\r\n              controls={false}\r\n              src={videoUrls[0]}\r\n              column={\"5 / 4 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"1 / 12 span\"}\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 8 span\"}\r\n              alt=\"img_real\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  XML을 이용한 Windows application의 UI 제작은 처음이였는데,\r\n                  편의성이 굉장히 뛰어나 놀랐습니다.\r\n                  <br />첫 사용이였는데도 금방 익힐 수 있었고, 생각한대로 구현이\r\n                  되는 것이 재밌었습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n        <ss.BackBtn onClick={() => navi(-1)}>돌아가기</ss.BackBtn>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Viaf2021.jsx",["217","218","219","220","221","222","223","224","225","226","227","228"],[],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\Button.jsx",["229"],[],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  width: auto;\r\n  margin: auto;\r\n  padding: 1rem 2rem;\r\n  color: white;\r\n  background-color: #4cc790;\r\n  border: 2px black solid;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    background-color: #79dfb1;\r\n  }\r\n  &:active {\r\n    background-color: #3f9b72;\r\n  }\r\n`;\r\n\r\nexport default function LinkButton(props) {\r\n  return (\r\n    <a href={props.link} target=\"_blank\">\r\n      <Button>{props.btnText || \"사이트로 가기\"}</Button>\r\n    </a>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Doh.jsx",["230","231","232","233","234","235","236","237"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { ss } from \"..\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nexport default function Doh() {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = useParams().contentsId;\r\n  const navi = useNavigate();\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">Dancing on the Hills</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"14%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">멋져보여서 시작한 프로젝션 매핑 작업</div>\r\n              </div>\r\n\r\n              <div className=\"desc\">\r\n                <div>\r\n                  학부생일 당시 시도해본 프로젝션 매핑 프로젝트입니다.\r\n                  <br />\r\n                  하고싶은걸 해보자라는 생각으로 시작했습니다. 점-선-면의\r\n                  시각화를 중심 컨셉으로 잡았습니다.\r\n                  <br />\r\n                  점-선-면이 대상물 위에서 춤을 추는 것처럼 보여 제목을 \"Dancing\r\n                  on the hills\"로 지었습니다.\r\n                  <br />\r\n                  대상물을 제작해서 빔프로젝터로 영상을 투사했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">점-선-면을 표현해보자</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  배경음의 박자에 맞춰 발랄한 움직임들을 사용했습니다.\r\n                  <br />\r\n                  지루하지 않게 최대한 다양한 표현을 하려고 노력했습니다.\r\n                  <br />\r\n                  영상 중반부에 동기생들의 작업물 일부를 넣어 과제전의 인트로\r\n                  영상으로 사용했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n          <ss.ImageHolder>\r\n            <ss.Holder__iframe column={\"3 / 8 span\"}>\r\n              <iframe\r\n                width=\"100%\"\r\n                height=\"800\"\r\n                src=\"https://www.youtube.com/embed/L2ln5hDMPJM\"\r\n                title=\"DOH\"\r\n                rel=\"0\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; encrypted-media; gyroscope\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            </ss.Holder__iframe>\r\n\r\n            <ss.Holder__image\r\n              src={imagesUrls[0]}\r\n              className=\"holder__image\"\r\n              alt=\"img00\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[1]}\r\n              className=\"holder__image\"\r\n              alt=\"img01\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[6]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              alt=\"img02\"\r\n              column={\"3 / 4 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              alt=\"img03\"\r\n              column={\"7 / 4 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[7]}\r\n              className=\"holder__image\"\r\n              alt=\"img00\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  직접 만든 프로젝션 매핑이라 재미있었습니다.\r\n                  <br />\r\n                  작업이 예상한것 보다 더 손이 많이 갔지만, 아직까지도 좋은\r\n                  기억으로 남아있습니다.\r\n                  <br />\r\n                  대상물의 형태를 조금 더 적극적으로 이용했으면 좋았을 것 같은\r\n                  아쉬움이 남습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Heartfit.jsx",["238","239","240","241","242","243"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nexport default function Heartfit({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = match.params.contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">HeartFit</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"23%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">얼굴인식으로 생체정보를 추론하는 앱</div>\r\n              </div>\r\n\r\n              <div className=\"desc\">\r\n                <div>\r\n                  감성과학센터에서 제작한 생체정보 추론 모바일 어플리케이션의\r\n                  UI를 제작/구현했습니다.\r\n                  <br />\r\n                  앱은 카메라로 얼굴을 인식하여 생체정보를 추론해줍니다.\r\n                  생체정보는 기록되고 시각화되어 사용자에게 제공됩니다.\r\n                </div>\r\n              </div>\r\n\r\n              <LinkButton\r\n                link=\"https://play.google.com/store/apps/details?id=com.gamsungtech.heartfit\"\r\n                btnText=\"구글 스토어 링크\"\r\n              />\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">XML을 이용한 인터페이스 구성</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  클라이언트에서 요구하는 화면 구성이 있었기 때문에 별다른\r\n                  기획단계 없이 제작을 시작했습니다.\r\n                  <br />\r\n                  얼굴을 인식한 알고리즘이 반환하는 값을 실시간으로 시각화하는\r\n                  작업을 진행했습니다.\r\n                  <br />\r\n                  알고리즘은 몇 가지의 수치값들과 표정분석 결과, 얼굴 정면 여부,\r\n                  정보들을 종합한 값을 추론합니다.\r\n                  <br />\r\n                  추론결과의 종류에 따라 각기 다른 시각화를 제작했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              alt=\"ui01\"\r\n              column={\"5 / 4 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[1]}\r\n              className=\"holder__image\"\r\n              alt=\"ui01\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              alt=\"graphs\"\r\n              column={\"3 / 8 span\"}\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  이전까진 Android native에서는 XML을 이용한 UI제작과 단순한\r\n                  Java만을 사용했었는데, 이번 기회에 Java를 조금 더 알 수 있어서\r\n                  좋았습니다.\r\n                  <br />\r\n                  프로젝트에 Kotlin을 시도해보고 싶었는데 시간 문제상 뛰어들지\r\n                  못한 것이 아쉬움으로 남습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Gutsy.jsx",["244","245","246","247","248","249","250","251"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nexport default function Gutsy() {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = useParams().contentsId;\r\n  const navi = useNavigate();\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">Gutsy</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"23%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">위장관 건강관리 어플리케이션</div>\r\n              </div>\r\n\r\n              <div className=\"desc\">\r\n                <div>사이드 프로젝트</div>\r\n              </div>\r\n\r\n              {/* <LinkButton link=\"https://viaf2021.github.io/viaf2021/\" /> */}\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">진행중인 사이드 프로젝트</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  위장관 건강을 위해 식습관, 생활 패턴을 기록하여 건강을\r\n                  추적하는 앱. 사용자의 배변활동, 식이, 스트레스 및 기분 정도를\r\n                  입력받아 분석하게 기획되었습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">유선형 디자인</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  소화기 이미지에서 오는 유기적인 느낌을 표현하고자 유선형\r\n                  디자인을 채택했습니다.\r\n                  <br />\r\n                  인터페이스는 둥근 형태를 기본형으로, 배경 장식들은 자유롭게\r\n                  흐르는 모양으로 제작했습니다.\r\n                  <br />\r\n                  기획 단계에서 부드러운 느낌을 주고 싶었기 때문에 파스텔톤에\r\n                  가까운 컬러를 사용했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[2]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 8 span\"}\r\n              alt=\"img01\"\r\n              objPos=\"0% 0\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[5]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 8 span\"}\r\n              alt=\"img02\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[4]}\r\n              className=\"holder__image\"\r\n              column={\"3 / 4 span\"}\r\n              alt=\"img03\"\r\n            />\r\n            <ss.Holder__image\r\n              src={imagesUrls[3]}\r\n              className=\"holder__image\"\r\n              column={\"7 / 4 span\"}\r\n              alt=\"img04\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>완성이 안된게 아쉬운점이다~</div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\NotFound.jsx",["252","253","254","255"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport default function NotFound({ match, history }) {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  return (\r\n    <div>\r\n      <h1>404 not found!</h1>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Loading.jsx",[],[],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\index.js",[],[],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\Footer.jsx",[],[],"C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\CustomHooks.jsx",["256","257"],[],"import { useState, useEffect } from \"react\";\r\n\r\nexport function useScroll() {\r\n  const [scrollY, setScrollYPos] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (mounted) {\r\n        setScrollYPos(window.scrollY);\r\n\r\n        // 아래 타이밍에 값이 업데이트 되지 않음\r\n        // console.log(scrollY);\r\n      }\r\n    });\r\n    return () => {\r\n      console.log(\"scroll event ended\");\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    scrollY,\r\n  };\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\pages\\Works__\\Cardivu.jsx",["258","259","260","261","262","263","264"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ss } from \"..\";\r\n// import JSON_DATA from \"../../Data2.json\";\r\nimport JSON_DATA from \"../../Data3.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport IntroHolder from \"../../components/IntroHolder\";\r\nimport ContributionChart from \"../../components/ContributionChart\";\r\nimport LinkButton from \"../../components/Button\";\r\n\r\nexport default function Cardivu() {\r\n  // JSON 파일을 만들어서 ContentsId랑 일치하는 오브젝트 불러오기\r\n  const contentsId = useParams().contentsId;\r\n  const [isScrolled, setScrollActive] = useState(false);\r\n  var data = null;\r\n  var imagesUrls = [];\r\n  var imagesObjectUrls = [];\r\n  var videoUrls = [];\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  JSON_DATA.map((item) => {\r\n    if (item.id == contentsId) {\r\n      data = item;\r\n      return;\r\n    }\r\n    return <div>Somethings wrong!</div>;\r\n  });\r\n\r\n  // 이미지+public 폴더 주소 합치기\r\n  data.images.map((item) => {\r\n    //배열 형태에 전달\r\n    imagesUrls.push(process.env.PUBLIC_URL + item);\r\n\r\n    //오브젝트 형태에 전달 <- 이미지갤러리 등에 쓰는 경우\r\n    imagesObjectUrls.push({ original: process.env.PUBLIC_URL + item });\r\n    return;\r\n  });\r\n\r\n  // 비디오+public 폴더 주소 합치기\r\n  data.videos.map((item) => {\r\n    videoUrls.push(process.env.PUBLIC_URL + item);\r\n    return;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header nav={\"WORKS\"} />\r\n      <ss.HeadContainer textColor=\"white\">\r\n        <ss.HeadContainerImg imageUrl={data.link_banner} />\r\n        {/* <ss.BackBtn onClick={() => history.goBack()}>뒤로</ss.BackBtn> */}\r\n        <div className=\"titleText Holder\">\r\n          <div className=\"01\">Cardivu</div>\r\n        </div>\r\n      </ss.HeadContainer>\r\n\r\n      <ss.Background>\r\n        <IntroHolder\r\n          title={data.title}\r\n          client={data.client}\r\n          period={data.period}\r\n          subtitle={data.subtitle}\r\n          team={data.team}\r\n          results={data.results.map((item, idx) => {\r\n            return (\r\n              <span key={idx}>\r\n                {item}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        />\r\n\r\n        <ss.MainContainer className={isScrolled ? \"scrolled\" : \"\"}>\r\n          {/* SVG 이미지 로드 */}\r\n          <ss.SvgImg\r\n            type=\"image/svg+xml\"\r\n            data={process.env.PUBLIC_URL + \"/img/svg/aboutCircle.svg\"}\r\n            top=\"23%\"\r\n            left=\"-20%\"\r\n          />\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder first={true}>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">홍채인식을 통한 심박 추론 앱</div>\r\n              </div>\r\n\r\n              <div className=\"desc\">\r\n                <div>\r\n                  스마트폰 사용중 홍채를 분석하여 심박 및 심박변이 등을 얻는\r\n                  건강관리 앱입니다.\r\n                  <br />\r\n                  디자인과 iOS 앱 제작을 메인으로, Android 개발을 서브 직책으로\r\n                  수행했습니다.\r\n                </div>\r\n              </div>\r\n\r\n              {/* <LinkButton link=\"https://viaf2021.github.io/viaf2021/\" /> */}\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.TechContainer>\r\n            <div className=\"techHolder__title\">담당업무 / 기여도</div>\r\n            <ss.TechHolder>\r\n              {data.jobs.map((item, idx) => {\r\n                return (\r\n                  <ContributionChart\r\n                    key={\"chart\" + idx}\r\n                    className=\"techHolder__chart\"\r\n                    jobName={item.job_name}\r\n                    myJob={item.my_job}\r\n                    withTeam={item.with_team}\r\n                    percent={item.percentage}\r\n                  />\r\n                );\r\n              })}\r\n            </ss.TechHolder>\r\n          </ss.TechContainer>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">건강관리 앱을 목표로</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  건강관리 앱을 목표로 했기 때문에 깔끔하며 신뢰를 줄 수 있는\r\n                  색을 컨셉으로 제작했습니다.\r\n                  <br />\r\n                  변수를 시각화하는 작업을 위해 그래프를 생성하는 컴포넌트를\r\n                  제작했습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n\r\n          <ss.ImageHolder>\r\n            <ss.Holder__image\r\n              src={imagesUrls[0]}\r\n              className=\"holder__image\"\r\n              column={\"1 / 12 span\"}\r\n              alt=\"car_img_01\"\r\n              objPos=\"0% 0\"\r\n            />\r\n          </ss.ImageHolder>\r\n\r\n          <div className=\"subContainer\">\r\n            <ss.TextHolder>\r\n              <div className=\"title\">\r\n                <div className=\"bar_start\" />\r\n                <div className=\"text\">프로젝트 종료 후</div>\r\n                <div className=\"bar_end\" />\r\n              </div>\r\n              <div className=\"desc\">\r\n                <div>\r\n                  회사 업무 프로젝트에 Swift를 사용해볼 수 있어서 좋았습니다.\r\n                  <br />\r\n                  앱 제작부터 출시까지 모든 프로세스를 경험해 볼 수 있었습니다.\r\n                  <br />\r\n                  전부 수행한것은 아니지만 JAVA를 이용한 안드로이드 개발도\r\n                  재밌었습니다.\r\n                  <br />\r\n                  Kotlin을 사용해보지 못했던 점이 아쉬움으로 남습니다.\r\n                </div>\r\n              </div>\r\n            </ss.TextHolder>\r\n          </div>\r\n        </ss.MainContainer>\r\n      </ss.Background>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tlvud\\Desktop\\react-web\\pyp\\src\\components\\DelayLink.jsx",["265","266","267"],[],"import React from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DL = styled(Link)`\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport default function DelayLink(props) {\r\n  const { delay, onDelayStart, onDelayEnd, replace, to } = props;\r\n  let timeout = null;\r\n  let location = useLocation();\r\n  let navigate = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   // 언마운트시 타임아웃 정리\r\n  //   return () => {\r\n  //     if (timeout) {\r\n  //       clearTimeout(timeout);\r\n  //     }\r\n  //   };\r\n  // });\r\n\r\n  const handleClick = (e) => {\r\n    // location 인풋이 목적지와 같으면 반환\r\n    if (location?.pathname === to) return;\r\n\r\n    // onDelayStart(e, to);\r\n\r\n    if (e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    // delay만큼 대기\r\n    timeout = setTimeout(() => {\r\n      // to로 이동\r\n      if (replace) {\r\n        navigate(to, { replace: true });\r\n      } else {\r\n        navigate(to);\r\n      }\r\n      // onDelayEnd(e, to);\r\n    }, delay);\r\n  };\r\n\r\n  DelayLink.defaultProps = {\r\n    replace: false,\r\n    delay: 0,\r\n    onDelayStart: () => {},\r\n    onDelayEnd: () => {},\r\n  };\r\n\r\n  return <DL to={to} onClick={handleClick} />;\r\n}\r\n",{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"268","replacedBy":"272"},{"ruleId":"270","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":3,"column":3,"nodeType":"276","messageId":"277","endLine":3,"endColumn":9},{"ruleId":"274","severity":1,"message":"278","line":9,"column":10,"nodeType":"276","messageId":"277","endLine":9,"endColumn":30},{"ruleId":"274","severity":1,"message":"279","line":11,"column":3,"nodeType":"276","messageId":"277","endLine":11,"endColumn":19},{"ruleId":"274","severity":1,"message":"280","line":12,"column":3,"nodeType":"276","messageId":"277","endLine":12,"endColumn":18},{"ruleId":"274","severity":1,"message":"281","line":13,"column":3,"nodeType":"276","messageId":"277","endLine":13,"endColumn":16},{"ruleId":"274","severity":1,"message":"282","line":17,"column":8,"nodeType":"276","messageId":"277","endLine":17,"endColumn":17},{"ruleId":"274","severity":1,"message":"283","line":18,"column":10,"nodeType":"276","messageId":"277","endLine":18,"endColumn":16},{"ruleId":"274","severity":1,"message":"284","line":19,"column":10,"nodeType":"276","messageId":"277","endLine":19,"endColumn":23},{"ruleId":"274","severity":1,"message":"285","line":20,"column":10,"nodeType":"276","messageId":"277","endLine":20,"endColumn":18},{"ruleId":"274","severity":1,"message":"286","line":24,"column":3,"nodeType":"276","messageId":"277","endLine":24,"endColumn":10},{"ruleId":"274","severity":1,"message":"287","line":26,"column":3,"nodeType":"276","messageId":"277","endLine":26,"endColumn":11},{"ruleId":"274","severity":1,"message":"288","line":43,"column":7,"nodeType":"276","messageId":"277","endLine":43,"endColumn":20},{"ruleId":"289","severity":1,"message":"290","line":89,"column":18,"nodeType":"291","messageId":"292","endLine":89,"endColumn":20},{"ruleId":"293","severity":1,"message":"294","line":90,"column":6,"nodeType":"295","endLine":90,"endColumn":16,"suggestions":"296"},{"ruleId":"274","severity":1,"message":"297","line":4,"column":10,"nodeType":"276","messageId":"277","endLine":4,"endColumn":21},{"ruleId":"274","severity":1,"message":"298","line":8,"column":10,"nodeType":"276","messageId":"277","endLine":8,"endColumn":16},{"ruleId":"274","severity":1,"message":"299","line":251,"column":7,"nodeType":"276","messageId":"277","endLine":251,"endColumn":17},{"ruleId":"274","severity":1,"message":"300","line":1,"column":10,"nodeType":"276","messageId":"277","endLine":1,"endColumn":18},{"ruleId":"274","severity":1,"message":"301","line":1,"column":20,"nodeType":"276","messageId":"277","endLine":1,"endColumn":24},{"ruleId":"274","severity":1,"message":"302","line":2,"column":8,"nodeType":"276","messageId":"277","endLine":2,"endColumn":14},{"ruleId":"274","severity":1,"message":"303","line":3,"column":10,"nodeType":"276","messageId":"277","endLine":3,"endColumn":15},{"ruleId":"274","severity":1,"message":"304","line":3,"column":17,"nodeType":"276","messageId":"277","endLine":3,"endColumn":23},{"ruleId":"274","severity":1,"message":"305","line":3,"column":36,"nodeType":"276","messageId":"277","endLine":3,"endColumn":47},{"ruleId":"274","severity":1,"message":"306","line":4,"column":10,"nodeType":"276","messageId":"277","endLine":4,"endColumn":21},{"ruleId":"274","severity":1,"message":"280","line":5,"column":10,"nodeType":"276","messageId":"277","endLine":5,"endColumn":25},{"ruleId":"274","severity":1,"message":"281","line":5,"column":27,"nodeType":"276","messageId":"277","endLine":5,"endColumn":40},{"ruleId":"274","severity":1,"message":"287","line":13,"column":3,"nodeType":"276","messageId":"277","endLine":13,"endColumn":11},{"ruleId":"274","severity":1,"message":"307","line":27,"column":10,"nodeType":"276","messageId":"277","endLine":27,"endColumn":27},{"ruleId":"274","severity":1,"message":"308","line":74,"column":10,"nodeType":"276","messageId":"277","endLine":74,"endColumn":24},{"ruleId":"293","severity":1,"message":"309","line":80,"column":3,"nodeType":"276","endLine":80,"endColumn":12,"suggestions":"310"},{"ruleId":"274","severity":1,"message":"311","line":3,"column":10,"nodeType":"276","messageId":"277","endLine":3,"endColumn":19},{"ruleId":"274","severity":1,"message":"312","line":67,"column":11,"nodeType":"276","messageId":"277","endLine":67,"endColumn":16},{"ruleId":"274","severity":1,"message":"313","line":67,"column":18,"nodeType":"276","messageId":"277","endLine":67,"endColumn":30},{"ruleId":"274","severity":1,"message":"314","line":67,"column":32,"nodeType":"276","messageId":"277","endLine":67,"endColumn":39},{"ruleId":"274","severity":1,"message":"315","line":67,"column":41,"nodeType":"276","messageId":"277","endLine":67,"endColumn":43},{"ruleId":"274","severity":1,"message":"316","line":68,"column":7,"nodeType":"276","messageId":"277","endLine":68,"endColumn":14},{"ruleId":"274","severity":1,"message":"317","line":69,"column":7,"nodeType":"276","messageId":"277","endLine":69,"endColumn":15},{"ruleId":"274","severity":1,"message":"318","line":70,"column":7,"nodeType":"276","messageId":"277","endLine":70,"endColumn":15},{"ruleId":"268","replacedBy":"319"},{"ruleId":"270","replacedBy":"320"},{"ruleId":"321","severity":1,"message":"322","line":97,"column":7,"nodeType":"323","messageId":"324","endLine":97,"endColumn":20},{"ruleId":"321","severity":1,"message":"322","line":102,"column":7,"nodeType":"323","messageId":"324","endLine":102,"endColumn":20},{"ruleId":"321","severity":1,"message":"322","line":107,"column":7,"nodeType":"323","messageId":"324","endLine":107,"endColumn":20},{"ruleId":"321","severity":1,"message":"322","line":112,"column":7,"nodeType":"323","messageId":"324","endLine":112,"endColumn":20},{"ruleId":"321","severity":1,"message":"322","line":117,"column":7,"nodeType":"323","messageId":"324","endLine":117,"endColumn":20},{"ruleId":"274","severity":1,"message":"325","line":12,"column":22,"nodeType":"276","messageId":"277","endLine":12,"endColumn":37},{"ruleId":"289","severity":1,"message":"326","line":21,"column":17,"nodeType":"291","messageId":"292","endLine":21,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":23,"column":7,"nodeType":"329","messageId":"330","endLine":23,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":35,"column":5,"nodeType":"329","messageId":"330","endLine":35,"endColumn":12},{"ruleId":"327","severity":1,"message":"328","line":41,"column":5,"nodeType":"329","messageId":"330","endLine":41,"endColumn":12},{"ruleId":"293","severity":1,"message":"331","line":93,"column":3,"nodeType":"276","endLine":93,"endColumn":12,"suggestions":"332"},{"ruleId":"274","severity":1,"message":"311","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"274","severity":1,"message":"325","line":15,"column":22,"nodeType":"276","messageId":"277","endLine":15,"endColumn":37},{"ruleId":"289","severity":1,"message":"326","line":24,"column":17,"nodeType":"291","messageId":"292","endLine":24,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":26,"column":7,"nodeType":"329","messageId":"330","endLine":26,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":38,"column":5,"nodeType":"329","messageId":"330","endLine":38,"endColumn":12},{"ruleId":"327","severity":1,"message":"328","line":44,"column":5,"nodeType":"329","messageId":"330","endLine":44,"endColumn":12},{"ruleId":"274","severity":1,"message":"333","line":4,"column":10,"nodeType":"276","messageId":"277","endLine":4,"endColumn":19},{"ruleId":"274","severity":1,"message":"325","line":15,"column":22,"nodeType":"276","messageId":"277","endLine":15,"endColumn":37},{"ruleId":"274","severity":1,"message":"334","line":16,"column":21,"nodeType":"276","messageId":"277","endLine":16,"endColumn":31},{"ruleId":"274","severity":1,"message":"335","line":18,"column":9,"nodeType":"276","messageId":"277","endLine":18,"endColumn":12},{"ruleId":"274","severity":1,"message":"317","line":19,"column":9,"nodeType":"276","messageId":"277","endLine":19,"endColumn":17},{"ruleId":"289","severity":1,"message":"326","line":34,"column":17,"nodeType":"291","messageId":"292","endLine":34,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":36,"column":7,"nodeType":"329","messageId":"330","endLine":36,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":48,"column":5,"nodeType":"329","messageId":"330","endLine":48,"endColumn":12},{"ruleId":"327","severity":1,"message":"328","line":54,"column":5,"nodeType":"329","messageId":"330","endLine":54,"endColumn":12},{"ruleId":"293","severity":1,"message":"336","line":60,"column":12,"nodeType":"337","endLine":60,"endColumn":35},{"ruleId":"293","severity":1,"message":"338","line":62,"column":12,"nodeType":"337","endLine":62,"endColumn":35},{"ruleId":"339","severity":1,"message":"340","line":212,"column":15,"nodeType":"323","endLine":220,"endColumn":16},{"ruleId":"341","severity":1,"message":"342","line":26,"column":5,"nodeType":"323","messageId":"343","endLine":26,"endColumn":42,"fix":"344"},{"ruleId":"274","severity":1,"message":"311","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"274","severity":1,"message":"345","line":9,"column":8,"nodeType":"276","messageId":"277","endLine":9,"endColumn":18},{"ruleId":"274","severity":1,"message":"346","line":14,"column":9,"nodeType":"276","messageId":"277","endLine":14,"endColumn":13},{"ruleId":"274","severity":1,"message":"325","line":15,"column":22,"nodeType":"276","messageId":"277","endLine":15,"endColumn":37},{"ruleId":"289","severity":1,"message":"326","line":24,"column":17,"nodeType":"291","messageId":"292","endLine":24,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":26,"column":7,"nodeType":"329","messageId":"330","endLine":26,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":38,"column":5,"nodeType":"329","messageId":"330","endLine":38,"endColumn":12},{"ruleId":"327","severity":1,"message":"328","line":44,"column":5,"nodeType":"329","messageId":"330","endLine":44,"endColumn":12},{"ruleId":"274","severity":1,"message":"311","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"274","severity":1,"message":"325","line":14,"column":22,"nodeType":"276","messageId":"277","endLine":14,"endColumn":37},{"ruleId":"289","severity":1,"message":"326","line":23,"column":17,"nodeType":"291","messageId":"292","endLine":23,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":25,"column":7,"nodeType":"329","messageId":"330","endLine":25,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":37,"column":5,"nodeType":"329","messageId":"330","endLine":37,"endColumn":12},{"ruleId":"327","severity":1,"message":"328","line":43,"column":5,"nodeType":"329","messageId":"330","endLine":43,"endColumn":12},{"ruleId":"274","severity":1,"message":"311","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"274","severity":1,"message":"345","line":10,"column":8,"nodeType":"276","messageId":"277","endLine":10,"endColumn":18},{"ruleId":"274","severity":1,"message":"346","line":15,"column":9,"nodeType":"276","messageId":"277","endLine":15,"endColumn":13},{"ruleId":"274","severity":1,"message":"325","line":16,"column":22,"nodeType":"276","messageId":"277","endLine":16,"endColumn":37},{"ruleId":"289","severity":1,"message":"326","line":25,"column":17,"nodeType":"291","messageId":"292","endLine":25,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":27,"column":7,"nodeType":"329","messageId":"330","endLine":27,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":39,"column":5,"nodeType":"329","messageId":"330","endLine":39,"endColumn":12},{"ruleId":"327","severity":1,"message":"328","line":45,"column":5,"nodeType":"329","messageId":"330","endLine":45,"endColumn":12},{"ruleId":"274","severity":1,"message":"347","line":1,"column":17,"nodeType":"276","messageId":"277","endLine":1,"endColumn":25},{"ruleId":"274","severity":1,"message":"311","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"274","severity":1,"message":"302","line":2,"column":8,"nodeType":"276","messageId":"277","endLine":2,"endColumn":14},{"ruleId":"274","severity":1,"message":"348","line":2,"column":18,"nodeType":"276","messageId":"277","endLine":2,"endColumn":21},{"ruleId":"274","severity":1,"message":"349","line":5,"column":10,"nodeType":"276","messageId":"277","endLine":5,"endColumn":17},{"ruleId":"274","severity":1,"message":"334","line":5,"column":19,"nodeType":"276","messageId":"277","endLine":5,"endColumn":29},{"ruleId":"274","severity":1,"message":"311","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"274","severity":1,"message":"345","line":10,"column":8,"nodeType":"276","messageId":"277","endLine":10,"endColumn":18},{"ruleId":"274","severity":1,"message":"325","line":15,"column":22,"nodeType":"276","messageId":"277","endLine":15,"endColumn":37},{"ruleId":"289","severity":1,"message":"326","line":24,"column":17,"nodeType":"291","messageId":"292","endLine":24,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":26,"column":7,"nodeType":"329","messageId":"330","endLine":26,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":38,"column":5,"nodeType":"329","messageId":"330","endLine":38,"endColumn":12},{"ruleId":"327","severity":1,"message":"328","line":44,"column":5,"nodeType":"329","messageId":"330","endLine":44,"endColumn":12},{"ruleId":"274","severity":1,"message":"350","line":11,"column":18,"nodeType":"276","messageId":"277","endLine":11,"endColumn":30},{"ruleId":"274","severity":1,"message":"351","line":11,"column":32,"nodeType":"276","messageId":"277","endLine":11,"endColumn":42},{"ruleId":"274","severity":1,"message":"316","line":12,"column":7,"nodeType":"276","messageId":"277","endLine":12,"endColumn":14},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],["352"],["353"],"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'createBrowserHistory' is defined but never used.","'SwitchTransition' is defined but never used.","'TransitionGroup' is defined but never used.","'CSSTransition' is defined but never used.","'JSON_DATA' is defined but never used.","'Header' is defined but never used.","'MainContainer' is defined but never used.","'ItemCell' is defined but never used.","'Welcome' is defined but never used.","'notFound' is defined but never used.","'FadeContainer' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayLocation'. Either include it or remove the dependency array.","ArrayExpression",["354"],"'GlobalStyle' is defined but never used.","'Footer' is defined but never used.","'TestButton' is assigned a value but never used.","'Suspense' is defined but never used.","'lazy' is defined but never used.","'styled' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'useLocation' is defined but never used.","'LoadingPage' is defined but never used.","'transitionTrigger' is assigned a value but never used.","'ContentsLoader' is defined but never used.","React Hook useEffect contains a call to 'setActive'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["355"],"'useEffect' is defined but never used.","'delay' is assigned a value but never used.","'delayControl' is assigned a value but never used.","'replace' is assigned a value but never used.","'to' is assigned a value but never used.","'timeout' is assigned a value but never used.","'location' is assigned a value but never used.","'navigate' is assigned a value but never used.",["352"],["353"],"react/jsx-pascal-case","Imported JSX component Intro__Item must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'setScrollActive' is assigned a value but never used.","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect contains a call to 'setSolo'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.withTeam.length] as a second argument to the useEffect Hook.",["356"],"'useScroll' is defined but never used.","'setLoading' is assigned a value but never used.","'nav' is assigned a value but never used.","Assignments to the 'to01' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'to02' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"357","text":"358"},"'LinkButton' is defined but never used.","'navi' is assigned a value but never used.","'useState' is defined but never used.","'css' is defined but never used.","'loading' is assigned a value but never used.","'onDelayStart' is assigned a value but never used.","'onDelayEnd' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},[547,547]," rel=\"noreferrer\"","Update the dependencies array to be: [displayLocation, location]",{"range":"365","text":"366"},"Add dependencies array: []",{"range":"367","text":"368"},"Add dependencies array: [props.withTeam.length]",{"range":"369","text":"370"},[1948,1958],"[displayLocation, location]",[1735,1735],", []",[2132,2132],", [props.withTeam.length]"]